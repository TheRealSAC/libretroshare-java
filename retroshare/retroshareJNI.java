/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class retroshareJNI {
  public final static native void rsDht_set(long jarg1, RsDht jarg1_);
  public final static native long rsDht_get();
  public final static native int RSDHT_NETSTART_NETWORKMODE_get();
  public final static native int RSDHT_NETSTART_NATTYPE_get();
  public final static native int RSDHT_NETSTART_NATHOLE_get();
  public final static native int RSDHT_NETSTART_CONNECTMODES_get();
  public final static native int RSDHT_NETSTART_NETSTATE_get();
  public final static native int RSDHT_PEERTYPE_ANY_get();
  public final static native int RSDHT_PEERTYPE_OTHER_get();
  public final static native int RSDHT_PEERTYPE_FOF_get();
  public final static native int RSDHT_PEERTYPE_FRIEND_get();
  public final static native int RSDHT_PEERDHT_NOT_ACTIVE_get();
  public final static native int RSDHT_PEERDHT_SEARCHING_get();
  public final static native int RSDHT_PEERDHT_FAILURE_get();
  public final static native int RSDHT_PEERDHT_OFFLINE_get();
  public final static native int RSDHT_PEERDHT_UNREACHABLE_get();
  public final static native int RSDHT_PEERDHT_ONLINE_get();
  public final static native int RSDHT_PEERCONN_DISCONNECTED_get();
  public final static native int RSDHT_PEERCONN_UDP_STARTED_get();
  public final static native int RSDHT_PEERCONN_CONNECTED_get();
  public final static native int RSDHT_PEERREQ_STOPPED_get();
  public final static native int RSDHT_PEERREQ_RUNNING_get();
  public final static native int RSDHT_TOU_MODE_NONE_get();
  public final static native int RSDHT_TOU_MODE_DIRECT_get();
  public final static native int RSDHT_TOU_MODE_PROXY_get();
  public final static native int RSDHT_TOU_MODE_RELAY_get();
  public final static native int RSDHT_RELAY_NUM_CLASS_get();
  public final static native int RSDHT_RELAY_CLASS_ALL_get();
  public final static native int RSDHT_RELAY_CLASS_GENERAL_get();
  public final static native int RSDHT_RELAY_CLASS_FOF_get();
  public final static native int RSDHT_RELAY_CLASS_FRIENDS_get();
  public final static native int RSDHT_RELAY_MODE_MASK_get();
  public final static native int RSDHT_RELAY_ENABLED_get();
  public final static native int RSDHT_RELAY_MODE_OFF_get();
  public final static native int RSDHT_RELAY_MODE_ON_get();
  public final static native int RSDHT_RELAY_MODE_SERVER_get();
  public final static native long new_RsDhtPeer();
  public final static native void RsDhtPeer_mBucket_set(long jarg1, RsDhtPeer jarg1_, int jarg2);
  public final static native int RsDhtPeer_mBucket_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mDhtId_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mDhtId_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mAddr_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mAddr_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mLastSendTime_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mLastSendTime_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mLastRecvTime_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mLastRecvTime_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mFoundTime_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mFoundTime_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mPeerFlags_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mPeerFlags_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void RsDhtPeer_mExtraFlags_set(long jarg1, RsDhtPeer jarg1_, long jarg2);
  public final static native long RsDhtPeer_mExtraFlags_get(long jarg1, RsDhtPeer jarg1_);
  public final static native void delete_RsDhtPeer(long jarg1);
  public final static native long new_RsDhtNetPeer();
  public final static native void RsDhtNetPeer_mDhtId_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mDhtId_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mRsId_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mRsId_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mPeerType_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mPeerType_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mDhtState_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mDhtState_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mConnectState_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mConnectState_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mPeerConnectState_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mPeerConnectState_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mPeerConnectMode_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mPeerConnectMode_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mExclusiveProxyLock_set(long jarg1, RsDhtNetPeer jarg1_, boolean jarg2);
  public final static native boolean RsDhtNetPeer_mExclusiveProxyLock_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mPeerConnectProxyId_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mPeerConnectProxyId_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mPeerReqState_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mPeerReqState_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void RsDhtNetPeer_mCbPeerMsg_set(long jarg1, RsDhtNetPeer jarg1_, long jarg2);
  public final static native long RsDhtNetPeer_mCbPeerMsg_get(long jarg1, RsDhtNetPeer jarg1_);
  public final static native void delete_RsDhtNetPeer(long jarg1);
  public final static native long new_RsDhtRelayEnd();
  public final static native void RsDhtRelayEnd_mLocalAddr_set(long jarg1, RsDhtRelayEnd jarg1_, long jarg2);
  public final static native long RsDhtRelayEnd_mLocalAddr_get(long jarg1, RsDhtRelayEnd jarg1_);
  public final static native void RsDhtRelayEnd_mProxyAddr_set(long jarg1, RsDhtRelayEnd jarg1_, long jarg2);
  public final static native long RsDhtRelayEnd_mProxyAddr_get(long jarg1, RsDhtRelayEnd jarg1_);
  public final static native void RsDhtRelayEnd_mRemoteAddr_set(long jarg1, RsDhtRelayEnd jarg1_, long jarg2);
  public final static native long RsDhtRelayEnd_mRemoteAddr_get(long jarg1, RsDhtRelayEnd jarg1_);
  public final static native void RsDhtRelayEnd_mCreateTS_set(long jarg1, RsDhtRelayEnd jarg1_, long jarg2);
  public final static native long RsDhtRelayEnd_mCreateTS_get(long jarg1, RsDhtRelayEnd jarg1_);
  public final static native void delete_RsDhtRelayEnd(long jarg1);
  public final static native long new_RsDhtRelayProxy();
  public final static native void RsDhtRelayProxy_mSrcAddr_set(long jarg1, RsDhtRelayProxy jarg1_, long jarg2);
  public final static native long RsDhtRelayProxy_mSrcAddr_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void RsDhtRelayProxy_mDestAddr_set(long jarg1, RsDhtRelayProxy jarg1_, long jarg2);
  public final static native long RsDhtRelayProxy_mDestAddr_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void RsDhtRelayProxy_mBandwidth_set(long jarg1, RsDhtRelayProxy jarg1_, double jarg2);
  public final static native double RsDhtRelayProxy_mBandwidth_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void RsDhtRelayProxy_mRelayClass_set(long jarg1, RsDhtRelayProxy jarg1_, int jarg2);
  public final static native int RsDhtRelayProxy_mRelayClass_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void RsDhtRelayProxy_mLastTS_set(long jarg1, RsDhtRelayProxy jarg1_, long jarg2);
  public final static native long RsDhtRelayProxy_mLastTS_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void RsDhtRelayProxy_mCreateTS_set(long jarg1, RsDhtRelayProxy jarg1_, long jarg2);
  public final static native long RsDhtRelayProxy_mCreateTS_get(long jarg1, RsDhtRelayProxy jarg1_);
  public final static native void delete_RsDhtRelayProxy(long jarg1);
  public final static native void delete_RsDht(long jarg1);
  public final static native long RsDht_getNetState(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_getDhtPeers(long jarg1, RsDht jarg1_, int jarg2, long jarg3);
  public final static native int RsDht_getNetPeerList(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_getNetPeerStatus(long jarg1, RsDht jarg1_, long jarg2, long jarg3, RsDhtNetPeer jarg3_);
  public final static native int RsDht_getRelayEnds(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_getRelayProxies(long jarg1, RsDht jarg1_, long jarg2);
  public final static native long RsDht_getUdpAddressString(long jarg1, RsDht jarg1_);
  public final static native void RsDht_getDhtRates(long jarg1, RsDht jarg1_, long jarg2, long jarg3);
  public final static native void RsDht_getRelayRates(long jarg1, RsDht jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int RsDht_getRelayServerList(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_addRelayServer(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_removeRelayServer(long jarg1, RsDht jarg1_, long jarg2);
  public final static native long RsDht_getRelayMode(long jarg1, RsDht jarg1_);
  public final static native int RsDht_setRelayMode(long jarg1, RsDht jarg1_, long jarg2);
  public final static native int RsDht_getRelayAllowance(long jarg1, RsDht jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int RsDht_setRelayAllowance(long jarg1, RsDht jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native boolean RsDht_getOwnDhtId(long jarg1, RsDht jarg1_, long jarg2);
}
