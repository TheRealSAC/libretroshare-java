/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3GxsCommentService extends GxsTokenQueue {
  private long swigCPtr;

  protected p3GxsCommentService(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3GxsCommentService_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3GxsCommentService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3GxsCommentService(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3GxsCommentService(RsGenExchange exchange, int service_type) {
    this(RetroshareJNI.new_p3GxsCommentService(RsGenExchange.getCPtr(exchange), exchange, service_type), true);
  }

  public void comment_tick() {
    RetroshareJNI.p3GxsCommentService_comment_tick(swigCPtr, this);
  }

  public boolean getGxsCommentData(long token, SWIGTYPE_p_std__vectorT_RsGxsComment_t msgs) {
    return RetroshareJNI.p3GxsCommentService_getGxsCommentData(swigCPtr, this, token, SWIGTYPE_p_std__vectorT_RsGxsComment_t.getCPtr(msgs));
  }

  public boolean getGxsRelatedComments(long token, SWIGTYPE_p_std__vectorT_RsGxsComment_t msgs) {
    return RetroshareJNI.p3GxsCommentService_getGxsRelatedComments(swigCPtr, this, token, SWIGTYPE_p_std__vectorT_RsGxsComment_t.getCPtr(msgs));
  }

  public boolean createGxsComment(SWIGTYPE_p_unsigned_int token, RsGxsComment msg) {
    return RetroshareJNI.p3GxsCommentService_createGxsComment(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(token), RsGxsComment.getCPtr(msg), msg);
  }

  public boolean createGxsVote(SWIGTYPE_p_unsigned_int token, RsGxsVote msg) {
    return RetroshareJNI.p3GxsCommentService_createGxsVote(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(token), RsGxsVote.getCPtr(msg), msg);
  }

  public boolean acknowledgeVote(long token, SWIGTYPE_p_std__pairT_std__string_std__string_t msgId) {
    return RetroshareJNI.p3GxsCommentService_acknowledgeVote(swigCPtr, this, token, SWIGTYPE_p_std__pairT_std__string_std__string_t.getCPtr(msgId));
  }

  public static double calculateBestScore(int upVotes, int downVotes) {
    return RetroshareJNI.p3GxsCommentService_calculateBestScore(upVotes, downVotes);
  }

}
