/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class upnphandler extends pqiNetAssistFirewall {
  private long swigCPtr;

  protected upnphandler(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.upnphandler_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(upnphandler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_upnphandler(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public upnphandler() {
    this(RetroshareJNI.new_upnphandler(), true);
  }

  public void enable(boolean active) {
    RetroshareJNI.upnphandler_enable(swigCPtr, this, active);
  }

  public void shutdown() {
    RetroshareJNI.upnphandler_shutdown(swigCPtr, this);
  }

  public void restart() {
    RetroshareJNI.upnphandler_restart(swigCPtr, this);
  }

  public boolean getEnabled() {
    return RetroshareJNI.upnphandler_getEnabled(swigCPtr, this);
  }

  public boolean getActive() {
    return RetroshareJNI.upnphandler_getActive(swigCPtr, this);
  }

  public void setInternalPort(int iport_in) {
    RetroshareJNI.upnphandler_setInternalPort(swigCPtr, this, iport_in);
  }

  public void setExternalPort(int eport_in) {
    RetroshareJNI.upnphandler_setExternalPort(swigCPtr, this, eport_in);
  }

  public boolean getInternalAddress(SWIGTYPE_p_sockaddr_in addr) {
    return RetroshareJNI.upnphandler_getInternalAddress(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public boolean getExternalAddress(SWIGTYPE_p_sockaddr_in addr) {
    return RetroshareJNI.upnphandler_getExternalAddress(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public boolean requestPortForward(PortForwardParams arg0) {
    return RetroshareJNI.upnphandler_requestPortForward(swigCPtr, this, PortForwardParams.getCPtr(arg0), arg0);
  }

  public boolean statusPortForward(long arg0, PortForwardParams arg1) {
    return RetroshareJNI.upnphandler_statusPortForward(swigCPtr, this, arg0, PortForwardParams.getCPtr(arg1), arg1);
  }

  public boolean start_upnp() {
    return RetroshareJNI.upnphandler_start_upnp(swigCPtr, this);
  }

  public boolean shutdown_upnp() {
    return RetroshareJNI.upnphandler_shutdown_upnp(swigCPtr, this);
  }

  public boolean initUPnPState() {
    return RetroshareJNI.upnphandler_initUPnPState(swigCPtr, this);
  }

  public boolean printUPnPState() {
    return RetroshareJNI.upnphandler_printUPnPState(swigCPtr, this);
  }

}
