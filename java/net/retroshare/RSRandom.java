/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RSRandom {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RSRandom(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RSRandom obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RSRandom(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static long random_u32() {
    return RetroshareJNI.RSRandom_random_u32();
  }

  public static java.math.BigInteger random_u64() {
    return RetroshareJNI.RSRandom_random_u64();
  }

  public static float random_f32() {
    return RetroshareJNI.RSRandom_random_f32();
  }

  public static double random_f64() {
    return RetroshareJNI.RSRandom_random_f64();
  }

  public static boolean seed(long s) {
    return RetroshareJNI.RSRandom_seed(s);
  }

  public static SWIGTYPE_p_std__string random_alphaNumericString(long length) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RSRandom_random_alphaNumericString(length), true);
  }

  public static void random_bytes(SWIGTYPE_p_unsigned_char data, long length) {
    RetroshareJNI.RSRandom_random_bytes(SWIGTYPE_p_unsigned_char.getCPtr(data), length);
  }

  public RSRandom() {
    this(RetroshareJNI.new_RSRandom(), true);
  }

}
