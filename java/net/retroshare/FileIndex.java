/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class FileIndex {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected FileIndex(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FileIndex obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_FileIndex(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public FileIndex(SWIGTYPE_p_std__string pid) {
    this(RetroshareJNI.new_FileIndex(SWIGTYPE_p_std__string.getCPtr(pid)), true);
  }

  public int setRootDirectories(SWIGTYPE_p_std__listT_std__string_t inlist, SWIGTYPE_p_time_t utime) {
    return RetroshareJNI.FileIndex_setRootDirectories(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(inlist), SWIGTYPE_p_time_t.getCPtr(utime));
  }

  public int getRootDirectories(SWIGTYPE_p_std__listT_std__string_t outlist) {
    return RetroshareJNI.FileIndex_getRootDirectories(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(outlist));
  }

  public DirEntry updateDirEntry(SWIGTYPE_p_std__string path, FileEntry fe, SWIGTYPE_p_time_t utime) {
    long cPtr = RetroshareJNI.FileIndex_updateDirEntry(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path), FileEntry.getCPtr(fe), fe, SWIGTYPE_p_time_t.getCPtr(utime));
    return (cPtr == 0) ? null : new DirEntry(cPtr, false);
  }

  public FileEntry updateFileEntry(SWIGTYPE_p_std__string path, FileEntry fe, SWIGTYPE_p_time_t utime) {
    long cPtr = RetroshareJNI.FileIndex_updateFileEntry(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path), FileEntry.getCPtr(fe), fe, SWIGTYPE_p_time_t.getCPtr(utime));
    return (cPtr == 0) ? null : new FileEntry(cPtr, false);
  }

  public DirEntry findOldDirectory(SWIGTYPE_p_time_t old) {
    long cPtr = RetroshareJNI.FileIndex_findOldDirectory(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(old));
    return (cPtr == 0) ? null : new DirEntry(cPtr, false);
  }

  public int removeOldDirectory(SWIGTYPE_p_std__string fpath, SWIGTYPE_p_std__string name, SWIGTYPE_p_time_t old) {
    return RetroshareJNI.FileIndex_removeOldDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(fpath), SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_time_t.getCPtr(old));
  }

  public int cleanOldEntries(SWIGTYPE_p_time_t old) {
    return RetroshareJNI.FileIndex_cleanOldEntries(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(old));
  }

  public int printFileIndex(SWIGTYPE_p_std__string out) {
    return RetroshareJNI.FileIndex_printFileIndex__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(out));
  }

  public int printFileIndex(SWIGTYPE_p_std__ostream out) {
    return RetroshareJNI.FileIndex_printFileIndex__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out));
  }

  public int loadIndex(SWIGTYPE_p_std__string filename, SWIGTYPE_p_std__string expectedHash, java.math.BigInteger size) {
    return RetroshareJNI.FileIndex_loadIndex(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(filename), SWIGTYPE_p_std__string.getCPtr(expectedHash), size);
  }

  public int saveIndex(SWIGTYPE_p_std__string filename, SWIGTYPE_p_std__string fileHash, SWIGTYPE_p_unsigned_long_long size, SWIGTYPE_p_std__setT_std__string_t forbidden_roots) {
    return RetroshareJNI.FileIndex_saveIndex(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(filename), SWIGTYPE_p_std__string.getCPtr(fileHash), SWIGTYPE_p_unsigned_long_long.getCPtr(size), SWIGTYPE_p_std__setT_std__string_t.getCPtr(forbidden_roots));
  }

  public int searchTerms(SWIGTYPE_p_std__listT_std__string_t terms, SWIGTYPE_p_std__listT_FileEntry_p_t results) {
    return RetroshareJNI.FileIndex_searchTerms(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(terms), SWIGTYPE_p_std__listT_FileEntry_p_t.getCPtr(results));
  }

  public int searchHash(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__listT_FileEntry_p_t results) {
    return RetroshareJNI.FileIndex_searchHash(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__listT_FileEntry_p_t.getCPtr(results));
  }

  public int searchBoolExp(Expression exp, SWIGTYPE_p_std__listT_FileEntry_p_t results) {
    return RetroshareJNI.FileIndex_searchBoolExp(swigCPtr, this, Expression.getCPtr(exp), exp, SWIGTYPE_p_std__listT_FileEntry_p_t.getCPtr(results));
  }

  public void updateMaxModTime() {
    RetroshareJNI.FileIndex_updateMaxModTime(swigCPtr, this);
  }

  public void RecursUpdateMaxModTime(DirEntry arg0) {
    RetroshareJNI.FileIndex_RecursUpdateMaxModTime(swigCPtr, this, DirEntry.getCPtr(arg0), arg0);
  }

  public void setRoot(PersonEntry value) {
    RetroshareJNI.FileIndex_root_set(swigCPtr, this, PersonEntry.getCPtr(value), value);
  }

  public PersonEntry getRoot() {
    long cPtr = RetroshareJNI.FileIndex_root_get(swigCPtr, this);
    return (cPtr == 0) ? null : new PersonEntry(cPtr, false);
  }

  public static void set_pointers(SWIGTYPE_p_std__tr1__unordered_setT_void_p_t value) {
    RetroshareJNI.FileIndex__pointers_set(SWIGTYPE_p_std__tr1__unordered_setT_void_p_t.getCPtr(value));
  }

  public static SWIGTYPE_p_std__tr1__unordered_setT_void_p_t get_pointers() {
    return new SWIGTYPE_p_std__tr1__unordered_setT_void_p_t(RetroshareJNI.FileIndex__pointers_get(), true);
  }

  public static void registerEntry(SWIGTYPE_p_void p) {
    RetroshareJNI.FileIndex_registerEntry(SWIGTYPE_p_void.getCPtr(p));
  }

  public static void unregisterEntry(SWIGTYPE_p_void p) {
    RetroshareJNI.FileIndex_unregisterEntry(SWIGTYPE_p_void.getCPtr(p));
  }

  public static boolean isValid(SWIGTYPE_p_void p) {
    return RetroshareJNI.FileIndex_isValid(SWIGTYPE_p_void.getCPtr(p));
  }

  public static boolean extractData(SWIGTYPE_p_void ref, DirDetails details) {
    return RetroshareJNI.FileIndex_extractData__SWIG_0(SWIGTYPE_p_void.getCPtr(ref), DirDetails.getCPtr(details), details);
  }

  public static long getType(SWIGTYPE_p_void ref) {
    return RetroshareJNI.FileIndex_getType(SWIGTYPE_p_void.getCPtr(ref));
  }

  public SWIGTYPE_p_void findRef(SWIGTYPE_p_std__string path) {
    long cPtr = RetroshareJNI.FileIndex_findRef(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public boolean extractData(SWIGTYPE_p_std__string path, DirDetails details) {
    return RetroshareJNI.FileIndex_extractData__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path), DirDetails.getCPtr(details), details);
  }

  public void updateHashIndex() {
    RetroshareJNI.FileIndex_updateHashIndex(swigCPtr, this);
  }

  public void recursUpdateHashIndex(DirEntry arg0) {
    RetroshareJNI.FileIndex_recursUpdateHashIndex(swigCPtr, this, DirEntry.getCPtr(arg0), arg0);
  }

  public void set_file_hashes(SWIGTYPE_p_std__mapT_std__string_FileEntry_p_t value) {
    RetroshareJNI.FileIndex__file_hashes_set(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_FileEntry_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__mapT_std__string_FileEntry_p_t get_file_hashes() {
    long cPtr = RetroshareJNI.FileIndex__file_hashes_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__mapT_std__string_FileEntry_p_t(cPtr, false);
  }

}
