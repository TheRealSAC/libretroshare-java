/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3Channels extends p3GroupDistrib {
  private long swigCPtr;

  protected p3Channels(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3Channels_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3Channels obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3Channels(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3Channels(int type, CacheStrapper cs, CacheTransfer cft, RsFiles files, SWIGTYPE_p_std__string srcdir, SWIGTYPE_p_std__string storedir, SWIGTYPE_p_std__string channelsdir) {
    this(RetroshareJNI.new_p3Channels(type, CacheStrapper.getCPtr(cs), cs, CacheTransfer.getCPtr(cft), cft, RsFiles.getCPtr(files), files, SWIGTYPE_p_std__string.getCPtr(srcdir), SWIGTYPE_p_std__string.getCPtr(storedir), SWIGTYPE_p_std__string.getCPtr(channelsdir)), true);
  }

  public void cleanUpOldFiles() {
    RetroshareJNI.p3Channels_cleanUpOldFiles(swigCPtr, this);
  }

  public boolean channelsChanged(SWIGTYPE_p_std__listT_std__string_t chanIds) {
    return RetroshareJNI.p3Channels_channelsChanged(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(chanIds));
  }

  public SWIGTYPE_p_std__string createChannel(SWIGTYPE_p_std__wstring chanName, SWIGTYPE_p_std__wstring chanDesc, long chanFlags, SWIGTYPE_p_unsigned_char pngImageData, long size) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Channels_createChannel(swigCPtr, this, SWIGTYPE_p_std__wstring.getCPtr(chanName), SWIGTYPE_p_std__wstring.getCPtr(chanDesc), chanFlags, SWIGTYPE_p_unsigned_char.getCPtr(pngImageData), size), true);
  }

  public boolean getChannelInfo(SWIGTYPE_p_std__string cId, ChannelInfo ci) {
    return RetroshareJNI.p3Channels_getChannelInfo(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), ChannelInfo.getCPtr(ci), ci);
  }

  public boolean getChannelList(SWIGTYPE_p_std__listT_ChannelInfo_t chanList) {
    return RetroshareJNI.p3Channels_getChannelList(swigCPtr, this, SWIGTYPE_p_std__listT_ChannelInfo_t.getCPtr(chanList));
  }

  public boolean getChannelMsgList(SWIGTYPE_p_std__string cId, SWIGTYPE_p_std__listT_ChannelMsgSummary_t msgs) {
    return RetroshareJNI.p3Channels_getChannelMsgList(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), SWIGTYPE_p_std__listT_ChannelMsgSummary_t.getCPtr(msgs));
  }

  public boolean getChannelMessage(SWIGTYPE_p_std__string cId, SWIGTYPE_p_std__string mId, ChannelMsgInfo msg) {
    return RetroshareJNI.p3Channels_getChannelMessage(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), SWIGTYPE_p_std__string.getCPtr(mId), ChannelMsgInfo.getCPtr(msg), msg);
  }

  public boolean ChannelMessageSend(ChannelMsgInfo info) {
    return RetroshareJNI.p3Channels_ChannelMessageSend(swigCPtr, this, ChannelMsgInfo.getCPtr(info), info);
  }

  public boolean setMessageStatus(SWIGTYPE_p_std__string cId, SWIGTYPE_p_std__string mId, long status, long statusMask) {
    return RetroshareJNI.p3Channels_setMessageStatus(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), SWIGTYPE_p_std__string.getCPtr(mId), status, statusMask);
  }

  public boolean getMessageStatus(SWIGTYPE_p_std__string cId, SWIGTYPE_p_std__string mId, SWIGTYPE_p_unsigned_int status) {
    return RetroshareJNI.p3Channels_getMessageStatus(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), SWIGTYPE_p_std__string.getCPtr(mId), SWIGTYPE_p_unsigned_int.getCPtr(status));
  }

  public boolean getMessageCount(SWIGTYPE_p_std__string cId, SWIGTYPE_p_unsigned_int newCount, SWIGTYPE_p_unsigned_int unreadCount) {
    return RetroshareJNI.p3Channels_getMessageCount(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), SWIGTYPE_p_unsigned_int.getCPtr(newCount), SWIGTYPE_p_unsigned_int.getCPtr(unreadCount));
  }

  public boolean channelSubscribe(SWIGTYPE_p_std__string cId, boolean subscribe, boolean autoDl) {
    return RetroshareJNI.p3Channels_channelSubscribe(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cId), subscribe, autoDl);
  }

  public boolean channelExtraFileHash(SWIGTYPE_p_std__string path, SWIGTYPE_p_std__string chId, FileInfo fInfo) {
    return RetroshareJNI.p3Channels_channelExtraFileHash(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path), SWIGTYPE_p_std__string.getCPtr(chId), FileInfo.getCPtr(fInfo), fInfo);
  }

  public boolean channelExtraFileRemove(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string chId) {
    return RetroshareJNI.p3Channels_channelExtraFileRemove(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(chId));
  }

  public boolean channelRestoreKeys(SWIGTYPE_p_std__string chId) {
    return RetroshareJNI.p3Channels_channelRestoreKeys(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId));
  }

  public boolean channelShareKeys(SWIGTYPE_p_std__string chId, SWIGTYPE_p_std__listT_std__string_t peers) {
    return RetroshareJNI.p3Channels_channelShareKeys(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId), SWIGTYPE_p_std__listT_std__string_t.getCPtr(peers));
  }

  public boolean channelEditInfo(SWIGTYPE_p_std__string chId, ChannelInfo ci) {
    return RetroshareJNI.p3Channels_channelEditInfo(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId), ChannelInfo.getCPtr(ci), ci);
  }

  public void getPubKeysAvailableGrpIds(SWIGTYPE_p_std__listT_std__string_t grpIds) {
    RetroshareJNI.p3Channels_getPubKeysAvailableGrpIds(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(grpIds));
  }

  public boolean channelSetAutoDl(SWIGTYPE_p_std__string chId, boolean autoDl) {
    return RetroshareJNI.p3Channels_channelSetAutoDl(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId), autoDl);
  }

  public boolean channelGetAutoDl(SWIGTYPE_p_std__string chId, SWIGTYPE_p_bool autoDl) {
    return RetroshareJNI.p3Channels_channelGetAutoDl(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId), SWIGTYPE_p_bool.getCPtr(autoDl));
  }

  public boolean channelSetDestinationDirectory(SWIGTYPE_p_std__string chId, SWIGTYPE_p_std__string dest_dir) {
    return RetroshareJNI.p3Channels_channelSetDestinationDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chId), SWIGTYPE_p_std__string.getCPtr(dest_dir));
  }

}
