/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class pqiNetStateBox {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected pqiNetStateBox(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(pqiNetStateBox obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_pqiNetStateBox(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public pqiNetStateBox() {
    this(RetroshareJNI.new_pqiNetStateBox(), true);
  }

  public void reset() {
    RetroshareJNI.pqiNetStateBox_reset(swigCPtr, this);
  }

  public void setAddressStunDht(SWIGTYPE_p_sockaddr_in arg0, boolean stable) {
    RetroshareJNI.pqiNetStateBox_setAddressStunDht(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(arg0), stable);
  }

  public void setAddressStunProxy(SWIGTYPE_p_sockaddr_in arg0, boolean stable) {
    RetroshareJNI.pqiNetStateBox_setAddressStunProxy(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(arg0), stable);
  }

  public void setAddressUPnP(boolean active, SWIGTYPE_p_sockaddr_in addr) {
    RetroshareJNI.pqiNetStateBox_setAddressUPnP(swigCPtr, this, active, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public void setAddressNatPMP(boolean active, SWIGTYPE_p_sockaddr_in addr) {
    RetroshareJNI.pqiNetStateBox_setAddressNatPMP(swigCPtr, this, active, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public void setAddressWebIP(boolean active, SWIGTYPE_p_sockaddr_in addr) {
    RetroshareJNI.pqiNetStateBox_setAddressWebIP(swigCPtr, this, active, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public void setPortForwarded(boolean active, int port) {
    RetroshareJNI.pqiNetStateBox_setPortForwarded(swigCPtr, this, active, port);
  }

  public void setDhtState(boolean dhtOn, boolean dhtActive) {
    RetroshareJNI.pqiNetStateBox_setDhtState(swigCPtr, this, dhtOn, dhtActive);
  }

  public long getNetStateMode() {
    return RetroshareJNI.pqiNetStateBox_getNetStateMode(swigCPtr, this);
  }

  public long getNetworkMode() {
    return RetroshareJNI.pqiNetStateBox_getNetworkMode(swigCPtr, this);
  }

  public long getNatTypeMode() {
    return RetroshareJNI.pqiNetStateBox_getNatTypeMode(swigCPtr, this);
  }

  public long getNatHoleMode() {
    return RetroshareJNI.pqiNetStateBox_getNatHoleMode(swigCPtr, this);
  }

  public long getConnectModes() {
    return RetroshareJNI.pqiNetStateBox_getConnectModes(swigCPtr, this);
  }

}
