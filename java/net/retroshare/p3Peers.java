/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3Peers extends RsPeers {
  private long swigCPtr;

  protected p3Peers(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3Peers_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3Peers obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3Peers(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3Peers(p3LinkMgr lm, p3PeerMgr pm, p3NetMgr nm) {
    this(RetroshareJNI.new_p3Peers(p3LinkMgr.getCPtr(lm), lm, p3PeerMgr.getCPtr(pm), pm, p3NetMgr.getCPtr(nm), nm), true);
  }

  public boolean FriendsChanged() {
    return RetroshareJNI.p3Peers_FriendsChanged(swigCPtr, this);
  }

  public boolean OthersChanged() {
    return RetroshareJNI.p3Peers_OthersChanged(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string getOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_getOwnId(swigCPtr, this), true);
  }

  public boolean haveSecretKey(SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.p3Peers_haveSecretKey(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean getOnlineList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getOnlineList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getFriendList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getFriendList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getPeerCount(SWIGTYPE_p_unsigned_int friendCount, SWIGTYPE_p_unsigned_int onlineCount, boolean ssl) {
    return RetroshareJNI.p3Peers_getPeerCount(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(friendCount), SWIGTYPE_p_unsigned_int.getCPtr(onlineCount), ssl);
  }

  public boolean isOnline(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.p3Peers_isOnline(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean isFriend(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.p3Peers_isFriend(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean isGPGAccepted(SWIGTYPE_p_std__string gpg_id_is_friend) {
    return RetroshareJNI.p3Peers_isGPGAccepted(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id_is_friend));
  }

  public SWIGTYPE_p_std__string getGPGName(SWIGTYPE_p_std__string gpg_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_getGPGName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id)), true);
  }

  public SWIGTYPE_p_std__string getPeerName(SWIGTYPE_p_std__string ssl_or_gpg_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_getPeerName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpg_id)), true);
  }

  public boolean getPeerDetails(SWIGTYPE_p_std__string ssl_or_gpg_id, RsPeerDetails d) {
    return RetroshareJNI.p3Peers_getPeerDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpg_id), RsPeerDetails.getCPtr(d), d);
  }

  public SWIGTYPE_p_std__string getGPGOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_getGPGOwnId(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getGPGId(SWIGTYPE_p_std__string ssl_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_getGPGId(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id)), true);
  }

  public boolean isKeySupported(SWIGTYPE_p_std__string ids) {
    return RetroshareJNI.p3Peers_isKeySupported(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ids));
  }

  public boolean getGPGAcceptedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getGPGAcceptedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGSignedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getGPGSignedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGValidList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getGPGValidList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGAllList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getGPGAllList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGDetails(SWIGTYPE_p_std__string id, RsPeerDetails d) {
    return RetroshareJNI.p3Peers_getGPGDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), RsPeerDetails.getCPtr(d), d);
  }

  public boolean getAssociatedSSLIds(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.p3Peers_getAssociatedSSLIds(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean gpgSignData(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char sign, SWIGTYPE_p_unsigned_int signlen) {
    return RetroshareJNI.p3Peers_gpgSignData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(sign), SWIGTYPE_p_unsigned_int.getCPtr(signlen));
  }

  public boolean addFriend(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_t_RsFlags32T_0x380912_t flags) {
    return RetroshareJNI.p3Peers_addFriend__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_t_RsFlags32T_0x380912_t.getCPtr(flags));
  }

  public boolean addFriend(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.p3Peers_addFriend__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean removeFriend(SWIGTYPE_p_std__string ssl_or_gpgid) {
    return RetroshareJNI.p3Peers_removeFriend(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpgid));
  }

  public boolean removeFriendLocation(SWIGTYPE_p_std__string sslId) {
    return RetroshareJNI.p3Peers_removeFriendLocation(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(sslId));
  }

  public boolean removeKeysFromPGPKeyring(SWIGTYPE_p_std__listT_std__string_t pgp_ids, SWIGTYPE_p_std__string backup_file, SWIGTYPE_p_unsigned_int error_code) {
    return RetroshareJNI.p3Peers_removeKeysFromPGPKeyring(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(pgp_ids), SWIGTYPE_p_std__string.getCPtr(backup_file), SWIGTYPE_p_unsigned_int.getCPtr(error_code));
  }

  public boolean connectAttempt(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.p3Peers_connectAttempt(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean setLocation(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string location) {
    return RetroshareJNI.p3Peers_setLocation(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(location));
  }

  public boolean setLocalAddress(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string addr, int port) {
    return RetroshareJNI.p3Peers_setLocalAddress(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(addr), port);
  }

  public boolean setExtAddress(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string addr, int port) {
    return RetroshareJNI.p3Peers_setExtAddress(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(addr), port);
  }

  public boolean setDynDNS(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string dyndns) {
    return RetroshareJNI.p3Peers_setDynDNS(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(dyndns));
  }

  public boolean setNetworkMode(SWIGTYPE_p_std__string id, long netMode) {
    return RetroshareJNI.p3Peers_setNetworkMode(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), netMode);
  }

  public boolean setVisState(SWIGTYPE_p_std__string id, long mode) {
    return RetroshareJNI.p3Peers_setVisState(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), mode);
  }

  public void getIPServersList(SWIGTYPE_p_std__listT_std__string_t ip_servers) {
    RetroshareJNI.p3Peers_getIPServersList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ip_servers));
  }

  public void allowServerIPDetermination(boolean arg0) {
    RetroshareJNI.p3Peers_allowServerIPDetermination(swigCPtr, this, arg0);
  }

  public void allowTunnelConnection(boolean arg0) {
    RetroshareJNI.p3Peers_allowTunnelConnection(swigCPtr, this, arg0);
  }

  public boolean getAllowServerIPDetermination() {
    return RetroshareJNI.p3Peers_getAllowServerIPDetermination(swigCPtr, this);
  }

  public boolean getAllowTunnelConnection() {
    return RetroshareJNI.p3Peers_getAllowTunnelConnection(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(SWIGTYPE_p_std__string ssl_id, boolean include_signatures, boolean old_format) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_GetRetroshareInvite__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), include_signatures, old_format), true);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(SWIGTYPE_p_std__string ssl_id, boolean include_signatures) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_GetRetroshareInvite__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), include_signatures), true);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(boolean include_signatures, boolean old_format) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_GetRetroshareInvite__SWIG_2(swigCPtr, this, include_signatures, old_format), true);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(boolean include_signatures) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_GetRetroshareInvite__SWIG_3(swigCPtr, this, include_signatures), true);
  }

  public boolean GetPGPBase64StringAndCheckSum(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__string gpg_base64_string, SWIGTYPE_p_std__string gpg_base64_checksum) {
    return RetroshareJNI.p3Peers_GetPGPBase64StringAndCheckSum(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__string.getCPtr(gpg_base64_string), SWIGTYPE_p_std__string.getCPtr(gpg_base64_checksum));
  }

  public boolean hasExportMinimal() {
    return RetroshareJNI.p3Peers_hasExportMinimal(swigCPtr, this);
  }

  public boolean loadCertificateFromString(SWIGTYPE_p_std__string cert, SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_std__string error_string) {
    return RetroshareJNI.p3Peers_loadCertificateFromString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cert), SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_std__string.getCPtr(error_string));
  }

  public boolean loadDetailsFromStringCert(SWIGTYPE_p_std__string cert, RsPeerDetails pd, SWIGTYPE_p_unsigned_int error_code) {
    return RetroshareJNI.p3Peers_loadDetailsFromStringCert(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cert), RsPeerDetails.getCPtr(pd), pd, SWIGTYPE_p_unsigned_int.getCPtr(error_code));
  }

  public boolean cleanCertificate(SWIGTYPE_p_std__string certstr, SWIGTYPE_p_std__string cleanCert, SWIGTYPE_p_int error_code) {
    return RetroshareJNI.p3Peers_cleanCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(certstr), SWIGTYPE_p_std__string.getCPtr(cleanCert), SWIGTYPE_p_int.getCPtr(error_code));
  }

  public boolean saveCertificateToFile(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string fname) {
    return RetroshareJNI.p3Peers_saveCertificateToFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(fname));
  }

  public SWIGTYPE_p_std__string saveCertificateToString(SWIGTYPE_p_std__string id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.p3Peers_saveCertificateToString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id)), true);
  }

  public boolean signGPGCertificate(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.p3Peers_signGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean trustGPGCertificate(SWIGTYPE_p_std__string id, long trustlvl) {
    return RetroshareJNI.p3Peers_trustGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), trustlvl);
  }

  public boolean addGroup(RsGroupInfo groupInfo) {
    return RetroshareJNI.p3Peers_addGroup(swigCPtr, this, RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean editGroup(SWIGTYPE_p_std__string groupId, RsGroupInfo groupInfo) {
    return RetroshareJNI.p3Peers_editGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean removeGroup(SWIGTYPE_p_std__string groupId) {
    return RetroshareJNI.p3Peers_removeGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId));
  }

  public boolean getGroupInfo(SWIGTYPE_p_std__string groupId, RsGroupInfo groupInfo) {
    return RetroshareJNI.p3Peers_getGroupInfo(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean getGroupInfoList(SWIGTYPE_p_std__listT_RsGroupInfo_t groupInfoList) {
    return RetroshareJNI.p3Peers_getGroupInfoList(swigCPtr, this, SWIGTYPE_p_std__listT_RsGroupInfo_t.getCPtr(groupInfoList));
  }

  public boolean assignPeerToGroup(SWIGTYPE_p_std__string groupId, SWIGTYPE_p_std__string peerId, boolean assign) {
    return RetroshareJNI.p3Peers_assignPeerToGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), SWIGTYPE_p_std__string.getCPtr(peerId), assign);
  }

  public boolean assignPeersToGroup(SWIGTYPE_p_std__string groupId, SWIGTYPE_p_std__listT_std__string_t peerIds, boolean assign) {
    return RetroshareJNI.p3Peers_assignPeersToGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), SWIGTYPE_p_std__listT_std__string_t.getCPtr(peerIds), assign);
  }

  public SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t computePeerPermissionFlags(SWIGTYPE_p_std__string peer_id, SWIGTYPE_p_t_RsFlags32T_0x184738_t share_flags, SWIGTYPE_p_std__listT_std__string_t parent_groups) {
    return new SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t(RetroshareJNI.p3Peers_computePeerPermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(peer_id), SWIGTYPE_p_t_RsFlags32T_0x184738_t.getCPtr(share_flags), SWIGTYPE_p_std__listT_std__string_t.getCPtr(parent_groups)), true);
  }

  public SWIGTYPE_p_t_RsFlags32T_0x380912_t servicePermissionFlags(SWIGTYPE_p_std__string gpg_id) {
    return new SWIGTYPE_p_t_RsFlags32T_0x380912_t(RetroshareJNI.p3Peers_servicePermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id)), true);
  }

  public SWIGTYPE_p_t_RsFlags32T_0x380912_t servicePermissionFlags_sslid(SWIGTYPE_p_std__string ssl_id) {
    return new SWIGTYPE_p_t_RsFlags32T_0x380912_t(RetroshareJNI.p3Peers_servicePermissionFlags_sslid(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id)), true);
  }

  public void setServicePermissionFlags(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_t_RsFlags32T_0x380912_t flags) {
    RetroshareJNI.p3Peers_setServicePermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_t_RsFlags32T_0x380912_t.getCPtr(flags));
  }

}
