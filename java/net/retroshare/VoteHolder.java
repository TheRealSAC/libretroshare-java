/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class VoteHolder {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected VoteHolder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VoteHolder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_VoteHolder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public VoteHolder() {
    this(RetroshareJNI.new_VoteHolder__SWIG_0(), true);
  }

  public VoteHolder(RsGxsVote vote, long reqToken) {
    this(RetroshareJNI.new_VoteHolder__SWIG_1(RsGxsVote.getCPtr(vote), vote, reqToken), true);
  }

  public void setMVote(RsGxsVote value) {
    RetroshareJNI.VoteHolder_mVote_set(swigCPtr, this, RsGxsVote.getCPtr(value), value);
  }

  public RsGxsVote getMVote() {
    long cPtr = RetroshareJNI.VoteHolder_mVote_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RsGxsVote(cPtr, false);
  }

  public void setMVoteToken(long value) {
    RetroshareJNI.VoteHolder_mVoteToken_set(swigCPtr, this, value);
  }

  public long getMVoteToken() {
    return RetroshareJNI.VoteHolder_mVoteToken_get(swigCPtr, this);
  }

  public void setMReqToken(long value) {
    RetroshareJNI.VoteHolder_mReqToken_set(swigCPtr, this, value);
  }

  public long getMReqToken() {
    return RetroshareJNI.VoteHolder_mReqToken_get(swigCPtr, this);
  }

  public void setMStatus(long value) {
    RetroshareJNI.VoteHolder_mStatus_set(swigCPtr, this, value);
  }

  public long getMStatus() {
    return RetroshareJNI.VoteHolder_mStatus_get(swigCPtr, this);
  }

  public final static long VOTE_ERROR = RetroshareJNI.VoteHolder_VOTE_ERROR_get();
  public final static long VOTE_QUEUED = RetroshareJNI.VoteHolder_VOTE_QUEUED_get();
  public final static long VOTE_SUBMITTED = RetroshareJNI.VoteHolder_VOTE_SUBMITTED_get();
  public final static long VOTE_READY = RetroshareJNI.VoteHolder_VOTE_READY_get();
}
