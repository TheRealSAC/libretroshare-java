/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class CachePair {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CachePair(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CachePair obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_CachePair(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CachePair() {
    this(RetroshareJNI.new_CachePair__SWIG_0(), true);
  }

  public CachePair(CacheSource a, CacheStore b, CacheId c) {
    this(RetroshareJNI.new_CachePair__SWIG_1(CacheSource.getCPtr(a), a, CacheStore.getCPtr(b), b, CacheId.getCPtr(c), c), true);
  }

  public void setSource(CacheSource value) {
    RetroshareJNI.CachePair_source_set(swigCPtr, this, CacheSource.getCPtr(value), value);
  }

  public CacheSource getSource() {
    long cPtr = RetroshareJNI.CachePair_source_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CacheSource(cPtr, false);
  }

  public void setStore(CacheStore value) {
    RetroshareJNI.CachePair_store_set(swigCPtr, this, CacheStore.getCPtr(value), value);
  }

  public CacheStore getStore() {
    long cPtr = RetroshareJNI.CachePair_store_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CacheStore(cPtr, false);
  }

  public void setId(CacheId value) {
    RetroshareJNI.CachePair_id_set(swigCPtr, this, CacheId.getCPtr(value), value);
  }

  public CacheId getId() {
    long cPtr = RetroshareJNI.CachePair_id_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CacheId(cPtr, false);
  }

}
