/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RsPosted extends RsGxsIfaceHelper {
  private long swigCPtr;

  protected RsPosted(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.RsPosted_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RsPosted obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RsPosted(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean getGroupData(long token, SWIGTYPE_p_std__vectorT_RsPostedGroup_t groups) {
    return RetroshareJNI.RsPosted_getGroupData(swigCPtr, this, token, SWIGTYPE_p_std__vectorT_RsPostedGroup_t.getCPtr(groups));
  }

  public boolean getPostData(long token, SWIGTYPE_p_std__vectorT_RsPostedPost_t posts) {
    return RetroshareJNI.RsPosted_getPostData(swigCPtr, this, token, SWIGTYPE_p_std__vectorT_RsPostedPost_t.getCPtr(posts));
  }

  public boolean getRelatedPosts(long token, SWIGTYPE_p_std__vectorT_RsPostedPost_t posts) {
    return RetroshareJNI.RsPosted_getRelatedPosts(swigCPtr, this, token, SWIGTYPE_p_std__vectorT_RsPostedPost_t.getCPtr(posts));
  }

  public void setMessageReadStatus(SWIGTYPE_p_unsigned_int token, SWIGTYPE_p_std__pairT_std__string_std__string_t msgId, boolean read) {
    RetroshareJNI.RsPosted_setMessageReadStatus(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(token), SWIGTYPE_p_std__pairT_std__string_std__string_t.getCPtr(msgId), read);
  }

  public boolean createGroup(SWIGTYPE_p_unsigned_int token, RsPostedGroup group) {
    return RetroshareJNI.RsPosted_createGroup(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(token), RsPostedGroup.getCPtr(group), group);
  }

  public boolean createPost(SWIGTYPE_p_unsigned_int token, RsPostedPost post) {
    return RetroshareJNI.RsPosted_createPost(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(token), RsPostedPost.getCPtr(post), post);
  }

  public final static class RankType {
    public final static RsPosted.RankType TopRankType = new RsPosted.RankType("TopRankType");
    public final static RsPosted.RankType HotRankType = new RsPosted.RankType("HotRankType");
    public final static RsPosted.RankType NewRankType = new RsPosted.RankType("NewRankType");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static RankType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + RankType.class + " with value " + swigValue);
    }

    private RankType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private RankType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private RankType(String swigName, RankType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static RankType[] swigValues = { TopRankType, HotRankType, NewRankType };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
