/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class SearchInterface {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SearchInterface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SearchInterface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_SearchInterface(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int SearchSpecific(RsCacheRequest arg0) {
    return RetroshareJNI.SearchInterface_SearchSpecific(swigCPtr, this, RsCacheRequest.getCPtr(arg0), arg0);
  }

  public RsCacheRequest RequestedSearch() {
    long cPtr = RetroshareJNI.SearchInterface_RequestedSearch(swigCPtr, this);
    return (cPtr == 0) ? null : new RsCacheRequest(cPtr, false);
  }

  public int SendSearchResult(RsCacheItem item) {
    return RetroshareJNI.SearchInterface_SendSearchResult(swigCPtr, this, RsCacheItem.getCPtr(item), item);
  }

  public RsCacheItem GetSearchResult() {
    long cPtr = RetroshareJNI.SearchInterface_GetSearchResult(swigCPtr, this);
    return (cPtr == 0) ? null : new RsCacheItem(cPtr, false);
  }

  public RsFileRequest GetFileRequest() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileRequest(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileRequest(cPtr, false);
  }

  public int SendFileRequest(RsFileRequest arg0) {
    return RetroshareJNI.SearchInterface_SendFileRequest(swigCPtr, this, RsFileRequest.getCPtr(arg0), arg0);
  }

  public RsFileData GetFileData() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileData(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileData(cPtr, false);
  }

  public int SendFileData(RsFileData arg0) {
    return RetroshareJNI.SearchInterface_SendFileData(swigCPtr, this, RsFileData.getCPtr(arg0), arg0);
  }

  public RsFileChunkMapRequest GetFileChunkMapRequest() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileChunkMapRequest(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileChunkMapRequest(cPtr, false);
  }

  public int SendFileChunkMapRequest(RsFileChunkMapRequest arg0) {
    return RetroshareJNI.SearchInterface_SendFileChunkMapRequest(swigCPtr, this, RsFileChunkMapRequest.getCPtr(arg0), arg0);
  }

  public RsFileChunkMap GetFileChunkMap() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileChunkMap(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileChunkMap(cPtr, false);
  }

  public int SendFileChunkMap(RsFileChunkMap arg0) {
    return RetroshareJNI.SearchInterface_SendFileChunkMap(swigCPtr, this, RsFileChunkMap.getCPtr(arg0), arg0);
  }

  public RsFileCRC32MapRequest GetFileCRC32MapRequest() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileCRC32MapRequest(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileCRC32MapRequest(cPtr, false);
  }

  public int SendFileCRC32MapRequest(RsFileCRC32MapRequest arg0) {
    return RetroshareJNI.SearchInterface_SendFileCRC32MapRequest(swigCPtr, this, RsFileCRC32MapRequest.getCPtr(arg0), arg0);
  }

  public RsFileCRC32Map GetFileCRC32Map() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileCRC32Map(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileCRC32Map(cPtr, false);
  }

  public int SendFileCRC32Map(RsFileCRC32Map arg0) {
    return RetroshareJNI.SearchInterface_SendFileCRC32Map(swigCPtr, this, RsFileCRC32Map.getCPtr(arg0), arg0);
  }

  public RsFileSingleChunkCrcRequest GetFileSingleChunkCrcRequest() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileSingleChunkCrcRequest(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileSingleChunkCrcRequest(cPtr, false);
  }

  public int SendFileSingleChunkCrcRequest(RsFileSingleChunkCrcRequest ns) {
    return RetroshareJNI.SearchInterface_SendFileSingleChunkCrcRequest(swigCPtr, this, RsFileSingleChunkCrcRequest.getCPtr(ns), ns);
  }

  public RsFileSingleChunkCrc GetFileSingleChunkCrc() {
    long cPtr = RetroshareJNI.SearchInterface_GetFileSingleChunkCrc(swigCPtr, this);
    return (cPtr == 0) ? null : new RsFileSingleChunkCrc(cPtr, false);
  }

  public int SendFileSingleChunkCrc(RsFileSingleChunkCrc ns) {
    return RetroshareJNI.SearchInterface_SendFileSingleChunkCrc(swigCPtr, this, RsFileSingleChunkCrc.getCPtr(ns), ns);
  }

}
