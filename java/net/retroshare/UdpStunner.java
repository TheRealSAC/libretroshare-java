/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class UdpStunner {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected UdpStunner(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(UdpStunner obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_UdpStunner(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public UdpStunner(SWIGTYPE_p_UdpPublisher pub) {
    this(RetroshareJNI.new_UdpStunner(SWIGTYPE_p_UdpPublisher.getCPtr(pub)), true);
  }

  public int grabExclusiveMode(SWIGTYPE_p_std__string holder) {
    return RetroshareJNI.UdpStunner_grabExclusiveMode(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(holder));
  }

  public int releaseExclusiveMode(SWIGTYPE_p_std__string holder, boolean forceStun) {
    return RetroshareJNI.UdpStunner_releaseExclusiveMode(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(holder), forceStun);
  }

  public void setTargetStunPeriod(int sec_per_stun) {
    RetroshareJNI.UdpStunner_setTargetStunPeriod(swigCPtr, this, sec_per_stun);
  }

  public boolean addStunPeer(SWIGTYPE_p_sockaddr_in remote, String peerid) {
    return RetroshareJNI.UdpStunner_addStunPeer(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(remote), peerid);
  }

  public boolean dropStunPeer(SWIGTYPE_p_sockaddr_in remote) {
    return RetroshareJNI.UdpStunner_dropStunPeer(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(remote));
  }

  public boolean getStunPeer(int idx, SWIGTYPE_p_std__string id, SWIGTYPE_p_sockaddr_in remote, SWIGTYPE_p_sockaddr_in eaddr, SWIGTYPE_p_unsigned_int failCount, SWIGTYPE_p_time_t lastSend) {
    return RetroshareJNI.UdpStunner_getStunPeer(swigCPtr, this, idx, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_sockaddr_in.getCPtr(remote), SWIGTYPE_p_sockaddr_in.getCPtr(eaddr), SWIGTYPE_p_unsigned_int.getCPtr(failCount), SWIGTYPE_p_time_t.getCPtr(lastSend));
  }

  public boolean needStunPeers() {
    return RetroshareJNI.UdpStunner_needStunPeers(swigCPtr, this);
  }

  public boolean externalAddr(SWIGTYPE_p_sockaddr_in remote, SWIGTYPE_p_unsigned_char stable) {
    return RetroshareJNI.UdpStunner_externalAddr(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(remote), SWIGTYPE_p_unsigned_char.getCPtr(stable));
  }

  public int recvPkt(SWIGTYPE_p_void data, int size, SWIGTYPE_p_sockaddr_in from) {
    return RetroshareJNI.UdpStunner_recvPkt(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), size, SWIGTYPE_p_sockaddr_in.getCPtr(from));
  }

  public int status(SWIGTYPE_p_std__ostream out) {
    return RetroshareJNI.UdpStunner_status(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out));
  }

  public int tick() {
    return RetroshareJNI.UdpStunner_tick(swigCPtr, this);
  }

}
