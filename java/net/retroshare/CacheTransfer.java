/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class CacheTransfer {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CacheTransfer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CacheTransfer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_CacheTransfer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CacheTransfer(CacheStrapper cs) {
    this(RetroshareJNI.new_CacheTransfer(CacheStrapper.getCPtr(cs), cs), true);
  }

  public boolean FindCacheFile(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string path, SWIGTYPE_p_unsigned_long_long size) {
    return RetroshareJNI.CacheTransfer_FindCacheFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(path), SWIGTYPE_p_unsigned_long_long.getCPtr(size));
  }

  public boolean RequestCache(RsCacheData data, CacheStore cbStore) {
    return RetroshareJNI.CacheTransfer_RequestCache(swigCPtr, this, RsCacheData.getCPtr(data), data, CacheStore.getCPtr(cbStore), cbStore);
  }

}
