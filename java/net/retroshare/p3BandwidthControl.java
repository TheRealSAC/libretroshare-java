/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3BandwidthControl extends p3Service {
  private long swigCPtr;

  protected p3BandwidthControl(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3BandwidthControl_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3BandwidthControl obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3BandwidthControl(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3BandwidthControl(pqipersongrp pg) {
    this(RetroshareJNI.new_p3BandwidthControl(pqipersongrp.getCPtr(pg), pg), true);
  }

  public int tick() {
    return RetroshareJNI.p3BandwidthControl_tick(swigCPtr, this);
  }

  public int status() {
    return RetroshareJNI.p3BandwidthControl_status(swigCPtr, this);
  }

  public int getTotalBandwidthRates(RsConfigDataRates rates) {
    return RetroshareJNI.p3BandwidthControl_getTotalBandwidthRates(swigCPtr, this, RsConfigDataRates.getCPtr(rates), rates);
  }

  public int getAllBandwidthRates(SWIGTYPE_p_std__mapT_std__string_RsConfigDataRates_t ratemap) {
    return RetroshareJNI.p3BandwidthControl_getAllBandwidthRates(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_RsConfigDataRates_t.getCPtr(ratemap));
  }

  public void statusChange(SWIGTYPE_p_std__listT_pqipeer_t plist) {
    RetroshareJNI.p3BandwidthControl_statusChange(swigCPtr, this, SWIGTYPE_p_std__listT_pqipeer_t.getCPtr(plist));
  }

}
