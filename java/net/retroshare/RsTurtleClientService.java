/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RsTurtleClientService {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RsTurtleClientService(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RsTurtleClientService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RsTurtleClientService(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean handleTunnelRequest(SWIGTYPE_p_std__string arg0, SWIGTYPE_p_std__string arg1) {
    return RetroshareJNI.RsTurtleClientService_handleTunnelRequest(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(arg0), SWIGTYPE_p_std__string.getCPtr(arg1));
  }

  public void receiveTurtleData(RsTurtleGenericTunnelItem arg0, SWIGTYPE_p_std__string arg1, SWIGTYPE_p_std__string arg2, long arg3) {
    RetroshareJNI.RsTurtleClientService_receiveTurtleData(swigCPtr, this, RsTurtleGenericTunnelItem.getCPtr(arg0), arg0, SWIGTYPE_p_std__string.getCPtr(arg1), SWIGTYPE_p_std__string.getCPtr(arg2), arg3);
  }

  public RsTurtleGenericTunnelItem deserialiseItem(SWIGTYPE_p_void arg0, long arg1) {
    long cPtr = RetroshareJNI.RsTurtleClientService_deserialiseItem(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0), arg1);
    return (cPtr == 0) ? null : new RsTurtleGenericTunnelItem(cPtr, false);
  }

  public void addVirtualPeer(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string virtual_peer_id, long dir) {
    RetroshareJNI.RsTurtleClientService_addVirtualPeer(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(virtual_peer_id), dir);
  }

  public void removeVirtualPeer(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string virtual_peer_id) {
    RetroshareJNI.RsTurtleClientService_removeVirtualPeer(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(virtual_peer_id));
  }

}
