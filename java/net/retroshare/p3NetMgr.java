/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3NetMgr {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected p3NetMgr(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3NetMgr obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3NetMgr(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean setNetworkMode(long netMode) {
    return RetroshareJNI.p3NetMgr_setNetworkMode(swigCPtr, this, netMode);
  }

  public boolean setVisState(long visState) {
    return RetroshareJNI.p3NetMgr_setVisState(swigCPtr, this, visState);
  }

  public boolean netAssistFriend(SWIGTYPE_p_std__string id, boolean on) {
    return RetroshareJNI.p3NetMgr_netAssistFriend(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), on);
  }

  public boolean netAssistKnownPeer(SWIGTYPE_p_std__string id, SWIGTYPE_p_sockaddr_in addr, long flags) {
    return RetroshareJNI.p3NetMgr_netAssistKnownPeer(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_sockaddr_in.getCPtr(addr), flags);
  }

  public boolean netAssistBadPeer(SWIGTYPE_p_sockaddr_in addr, long reason, long flags, long age) {
    return RetroshareJNI.p3NetMgr_netAssistBadPeer(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr), reason, flags, age);
  }

  public boolean netAssistStatusUpdate(SWIGTYPE_p_std__string id, int mode) {
    return RetroshareJNI.p3NetMgr_netAssistStatusUpdate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), mode);
  }

  public long getNetStateMode() {
    return RetroshareJNI.p3NetMgr_getNetStateMode(swigCPtr, this);
  }

  public long getNetworkMode() {
    return RetroshareJNI.p3NetMgr_getNetworkMode(swigCPtr, this);
  }

  public long getNatTypeMode() {
    return RetroshareJNI.p3NetMgr_getNatTypeMode(swigCPtr, this);
  }

  public long getNatHoleMode() {
    return RetroshareJNI.p3NetMgr_getNatHoleMode(swigCPtr, this);
  }

  public long getConnectModes() {
    return RetroshareJNI.p3NetMgr_getConnectModes(swigCPtr, this);
  }

  public boolean shutdown() {
    return RetroshareJNI.p3NetMgr_shutdown(swigCPtr, this);
  }

  public boolean getIPServersEnabled() {
    return RetroshareJNI.p3NetMgr_getIPServersEnabled(swigCPtr, this);
  }

  public void setIPServersEnabled(boolean b) {
    RetroshareJNI.p3NetMgr_setIPServersEnabled(swigCPtr, this, b);
  }

  public void getIPServersList(SWIGTYPE_p_std__listT_std__string_t ip_servers) {
    RetroshareJNI.p3NetMgr_getIPServersList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ip_servers));
  }

  public void getNetStatus(pqiNetStatus status) {
    RetroshareJNI.p3NetMgr_getNetStatus(swigCPtr, this, pqiNetStatus.getCPtr(status), status);
  }

  public boolean getUPnPState() {
    return RetroshareJNI.p3NetMgr_getUPnPState(swigCPtr, this);
  }

  public boolean getUPnPEnabled() {
    return RetroshareJNI.p3NetMgr_getUPnPEnabled(swigCPtr, this);
  }

  public boolean getDHTEnabled() {
    return RetroshareJNI.p3NetMgr_getDHTEnabled(swigCPtr, this);
  }

}
