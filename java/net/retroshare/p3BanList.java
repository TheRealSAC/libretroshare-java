/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3BanList extends p3Service {
  private long swigCPtr;

  protected p3BanList(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3BanList_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3BanList obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3BanList(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3BanList(p3LinkMgr lm, p3NetMgr nm) {
    this(RetroshareJNI.new_p3BanList(p3LinkMgr.getCPtr(lm), lm, p3NetMgr.getCPtr(nm), nm), true);
  }

  public void updatePeer(SWIGTYPE_p_std__string id, SWIGTYPE_p_sockaddr_in addr, int type, int reason, int age) {
    RetroshareJNI.p3BanList_updatePeer(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_sockaddr_in.getCPtr(addr), type, reason, age);
  }

  public int tick() {
    return RetroshareJNI.p3BanList_tick(swigCPtr, this);
  }

  public int status() {
    return RetroshareJNI.p3BanList_status(swigCPtr, this);
  }

  public int sendPackets() {
    return RetroshareJNI.p3BanList_sendPackets(swigCPtr, this);
  }

  public boolean processIncoming() {
    return RetroshareJNI.p3BanList_processIncoming(swigCPtr, this);
  }

  public boolean recvBanItem(RsBanListItem item) {
    return RetroshareJNI.p3BanList_recvBanItem(swigCPtr, this, RsBanListItem.getCPtr(item), item);
  }

  public boolean addBanEntry(SWIGTYPE_p_std__string peerId, SWIGTYPE_p_sockaddr_in addr, int level, long reason, long age) {
    return RetroshareJNI.p3BanList_addBanEntry(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(peerId), SWIGTYPE_p_sockaddr_in.getCPtr(addr), level, reason, age);
  }

  public void sendBanLists() {
    RetroshareJNI.p3BanList_sendBanLists(swigCPtr, this);
  }

  public int sendBanSet(SWIGTYPE_p_std__string peerid) {
    return RetroshareJNI.p3BanList_sendBanSet(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(peerid));
  }

}
