/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class UdpPeerReceiver {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected UdpPeerReceiver(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(UdpPeerReceiver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_UdpPeerReceiver(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public UdpPeerReceiver(SWIGTYPE_p_UdpPublisher pub) {
    this(RetroshareJNI.new_UdpPeerReceiver(SWIGTYPE_p_UdpPublisher.getCPtr(pub)), true);
  }

  public int addUdpPeer(UdpPeer peer, SWIGTYPE_p_sockaddr_in raddr) {
    return RetroshareJNI.UdpPeerReceiver_addUdpPeer(swigCPtr, this, UdpPeer.getCPtr(peer), peer, SWIGTYPE_p_sockaddr_in.getCPtr(raddr));
  }

  public int removeUdpPeer(UdpPeer peer) {
    return RetroshareJNI.UdpPeerReceiver_removeUdpPeer(swigCPtr, this, UdpPeer.getCPtr(peer), peer);
  }

  public int recvPkt(SWIGTYPE_p_void data, int size, SWIGTYPE_p_sockaddr_in from) {
    return RetroshareJNI.UdpPeerReceiver_recvPkt(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), size, SWIGTYPE_p_sockaddr_in.getCPtr(from));
  }

  public int status(SWIGTYPE_p_std__ostream out) {
    return RetroshareJNI.UdpPeerReceiver_status(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out));
  }

}
