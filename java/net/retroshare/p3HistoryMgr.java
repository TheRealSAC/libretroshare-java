/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3HistoryMgr extends p3Config {
  private long swigCPtr;

  protected p3HistoryMgr(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3HistoryMgr_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3HistoryMgr obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3HistoryMgr(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3HistoryMgr() {
    this(RetroshareJNI.new_p3HistoryMgr(), true);
  }

  public void addMessage(boolean incoming, SWIGTYPE_p_std__string chatPeerId, SWIGTYPE_p_std__string peerId, RsChatMsgItem chatItem) {
    RetroshareJNI.p3HistoryMgr_addMessage(swigCPtr, this, incoming, SWIGTYPE_p_std__string.getCPtr(chatPeerId), SWIGTYPE_p_std__string.getCPtr(peerId), RsChatMsgItem.getCPtr(chatItem), chatItem);
  }

  public boolean getMessages(SWIGTYPE_p_std__string chatPeerId, SWIGTYPE_p_std__listT_HistoryMsg_t msgs, long loadCount) {
    return RetroshareJNI.p3HistoryMgr_getMessages(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chatPeerId), SWIGTYPE_p_std__listT_HistoryMsg_t.getCPtr(msgs), loadCount);
  }

  public boolean getMessage(long msgId, HistoryMsg msg) {
    return RetroshareJNI.p3HistoryMgr_getMessage(swigCPtr, this, msgId, HistoryMsg.getCPtr(msg), msg);
  }

  public void clear(SWIGTYPE_p_std__string chatPeerId) {
    RetroshareJNI.p3HistoryMgr_clear(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(chatPeerId));
  }

  public void removeMessages(SWIGTYPE_p_std__listT_unsigned_int_t msgIds) {
    RetroshareJNI.p3HistoryMgr_removeMessages(swigCPtr, this, SWIGTYPE_p_std__listT_unsigned_int_t.getCPtr(msgIds));
  }

  public boolean getEnable(long chat_type) {
    return RetroshareJNI.p3HistoryMgr_getEnable(swigCPtr, this, chat_type);
  }

  public void setEnable(long chat_type, boolean enable) {
    RetroshareJNI.p3HistoryMgr_setEnable(swigCPtr, this, chat_type, enable);
  }

  public long getSaveCount(long chat_type) {
    return RetroshareJNI.p3HistoryMgr_getSaveCount(swigCPtr, this, chat_type);
  }

  public void setSaveCount(long chat_type, long count) {
    RetroshareJNI.p3HistoryMgr_setSaveCount(swigCPtr, this, chat_type, count);
  }

  public void setMaxStorageDuration(long seconds) {
    RetroshareJNI.p3HistoryMgr_setMaxStorageDuration(swigCPtr, this, seconds);
  }

  public long getMaxStorageDuration() {
    return RetroshareJNI.p3HistoryMgr_getMaxStorageDuration(swigCPtr, this);
  }

  public RsSerialiser setupSerialiser() {
    long cPtr = RetroshareJNI.p3HistoryMgr_setupSerialiser(swigCPtr, this);
    return (cPtr == 0) ? null : new RsSerialiser(cPtr, false);
  }

  public boolean saveList(SWIGTYPE_p_bool cleanup, SWIGTYPE_p_std__listT_RsItem_p_t saveData) {
    return RetroshareJNI.p3HistoryMgr_saveList(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(cleanup), SWIGTYPE_p_std__listT_RsItem_p_t.getCPtr(saveData));
  }

  public void saveDone() {
    RetroshareJNI.p3HistoryMgr_saveDone(swigCPtr, this);
  }

  public boolean loadList(SWIGTYPE_p_std__listT_RsItem_p_t load) {
    return RetroshareJNI.p3HistoryMgr_loadList(swigCPtr, this, SWIGTYPE_p_std__listT_RsItem_p_t.getCPtr(load));
  }

}
