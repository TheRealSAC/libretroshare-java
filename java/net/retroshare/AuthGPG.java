/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class AuthGPG extends p3Config {
  private long swigCPtr;

  protected AuthGPG(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.AuthGPG_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AuthGPG obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static void init(SWIGTYPE_p_std__string path_to_pubring, SWIGTYPE_p_std__string path_to_secring, SWIGTYPE_p_std__string path_to_trustdb, SWIGTYPE_p_std__string pgp_lock_file) {
    RetroshareJNI.AuthGPG_init(SWIGTYPE_p_std__string.getCPtr(path_to_pubring), SWIGTYPE_p_std__string.getCPtr(path_to_secring), SWIGTYPE_p_std__string.getCPtr(path_to_trustdb), SWIGTYPE_p_std__string.getCPtr(pgp_lock_file));
  }

  public static void exit() {
    RetroshareJNI.AuthGPG_exit();
  }

  public static AuthGPG getAuthGPG() {
    long cPtr = RetroshareJNI.AuthGPG_getAuthGPG();
    return (cPtr == 0) ? null : new AuthGPG(cPtr, false);
  }

  public boolean availableGPGCertificatesWithPrivateKeys(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPG_availableGPGCertificatesWithPrivateKeys(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean active() {
    return RetroshareJNI.AuthGPG_active(swigCPtr, this);
  }

  public int GPGInit(SWIGTYPE_p_std__string ownId) {
    return RetroshareJNI.AuthGPG_GPGInit(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ownId));
  }

  public boolean GeneratePGPCertificate(SWIGTYPE_p_std__string name, SWIGTYPE_p_std__string email, SWIGTYPE_p_std__string passwd, SWIGTYPE_p_std__string pgpId, SWIGTYPE_p_std__string errString) {
    return RetroshareJNI.AuthGPG_GeneratePGPCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_std__string.getCPtr(email), SWIGTYPE_p_std__string.getCPtr(passwd), SWIGTYPE_p_std__string.getCPtr(pgpId), SWIGTYPE_p_std__string.getCPtr(errString));
  }

  public SWIGTYPE_p_std__string getGPGName(SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_bool success) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGName__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_bool.getCPtr(success)), true);
  }

  public SWIGTYPE_p_std__string getGPGName(SWIGTYPE_p_std__string pgp_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGName__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id)), true);
  }

  public SWIGTYPE_p_std__string getGPGEmail(SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_bool success) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGEmail__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_bool.getCPtr(success)), true);
  }

  public SWIGTYPE_p_std__string getGPGEmail(SWIGTYPE_p_std__string pgp_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGEmail__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id)), true);
  }

  public SWIGTYPE_p_std__string getGPGOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGOwnId(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getGPGOwnName() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_getGPGOwnName(swigCPtr, this), true);
  }

  public boolean isKeySupported(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPG_isKeySupported(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean haveSecretKey(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPG_haveSecretKey(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean getGPGDetails(SWIGTYPE_p_std__string id, RsPeerDetails d) {
    return RetroshareJNI.AuthGPG_getGPGDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), RsPeerDetails.getCPtr(d), d);
  }

  public boolean getGPGAllList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPG_getGPGAllList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGValidList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPG_getGPGValidList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGAcceptedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPG_getGPGAcceptedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGSignedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPG_getGPGSignedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean importProfile(SWIGTYPE_p_std__string filename, SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__string import_error) {
    return RetroshareJNI.AuthGPG_importProfile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(filename), SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__string.getCPtr(import_error));
  }

  public boolean exportProfile(SWIGTYPE_p_std__string filename, SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.AuthGPG_exportProfile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(filename), SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean removeKeysFromPGPKeyring(SWIGTYPE_p_std__listT_std__string_t pgp_ids, SWIGTYPE_p_std__string backup_file, SWIGTYPE_p_unsigned_int error_code) {
    return RetroshareJNI.AuthGPG_removeKeysFromPGPKeyring(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(pgp_ids), SWIGTYPE_p_std__string.getCPtr(backup_file), SWIGTYPE_p_unsigned_int.getCPtr(error_code));
  }

  public boolean LoadCertificateFromString(SWIGTYPE_p_std__string pem, SWIGTYPE_p_t_RsGenericIdTypeT_8_t gpg_id, SWIGTYPE_p_std__string error_string) {
    return RetroshareJNI.AuthGPG_LoadCertificateFromString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pem), SWIGTYPE_p_t_RsGenericIdTypeT_8_t.getCPtr(gpg_id), SWIGTYPE_p_std__string.getCPtr(error_string));
  }

  public SWIGTYPE_p_std__string SaveCertificateToString(SWIGTYPE_p_std__string id, boolean include_signatures) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPG_SaveCertificateToString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), include_signatures), true);
  }

  public boolean getCachedGPGCertificate(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string certificate) {
    return RetroshareJNI.AuthGPG_getCachedGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(certificate));
  }

  public boolean AllowConnection(SWIGTYPE_p_std__string gpg_id, boolean accept) {
    return RetroshareJNI.AuthGPG_AllowConnection(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), accept);
  }

  public boolean SignCertificateLevel0(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPG_SignCertificateLevel0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean RevokeCertificate(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPG_RevokeCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean TrustCertificate(SWIGTYPE_p_std__string id, int trustlvl) {
    return RetroshareJNI.AuthGPG_TrustCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), trustlvl);
  }

  public boolean SignDataBin(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char sign, SWIGTYPE_p_unsigned_int signlen) {
    return RetroshareJNI.AuthGPG_SignDataBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(sign), SWIGTYPE_p_unsigned_int.getCPtr(signlen));
  }

  public boolean VerifySignBin(SWIGTYPE_p_void arg0, long arg1, SWIGTYPE_p_unsigned_char arg2, long arg3, SWIGTYPE_p_std__string withfingerprint) {
    return RetroshareJNI.AuthGPG_VerifySignBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0), arg1, SWIGTYPE_p_unsigned_char.getCPtr(arg2), arg3, SWIGTYPE_p_std__string.getCPtr(withfingerprint));
  }

  public boolean encryptDataBin(SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char encr, SWIGTYPE_p_unsigned_int encrlen) {
    return RetroshareJNI.AuthGPG_encryptDataBin(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(encr), SWIGTYPE_p_unsigned_int.getCPtr(encrlen));
  }

  public boolean decryptDataBin(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char decr, SWIGTYPE_p_unsigned_int decrlen) {
    return RetroshareJNI.AuthGPG_decryptDataBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(decr), SWIGTYPE_p_unsigned_int.getCPtr(decrlen));
  }

  public boolean decryptTextFromFile(SWIGTYPE_p_std__string text, SWIGTYPE_p_std__string filename) {
    return RetroshareJNI.AuthGPG_decryptTextFromFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(text), SWIGTYPE_p_std__string.getCPtr(filename));
  }

  public boolean encryptTextToFile(SWIGTYPE_p_std__string text, SWIGTYPE_p_std__string filename) {
    return RetroshareJNI.AuthGPG_encryptTextToFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(text), SWIGTYPE_p_std__string.getCPtr(filename));
  }

  public boolean getGPGFilteredList(SWIGTYPE_p_std__listT_std__string_t list, SWIGTYPE_p_f_r_q_const__PGPCertificateInfo__bool filter) {
    return RetroshareJNI.AuthGPG_getGPGFilteredList__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(list), SWIGTYPE_p_f_r_q_const__PGPCertificateInfo__bool.getCPtr(filter));
  }

  public boolean getGPGFilteredList(SWIGTYPE_p_std__listT_std__string_t list) {
    return RetroshareJNI.AuthGPG_getGPGFilteredList__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(list));
  }

  public boolean addService(AuthGPGService service) {
    return RetroshareJNI.AuthGPG_addService(swigCPtr, this, AuthGPGService.getCPtr(service), service);
  }

  public static void setAuthGPG_debug(AuthGPG auth_gpg) {
    RetroshareJNI.AuthGPG_setAuthGPG_debug(AuthGPG.getCPtr(auth_gpg), auth_gpg);
  }

}
