/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RateInterface {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RateInterface(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RateInterface obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RateInterface(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RateInterface() {
    this(RetroshareJNI.new_RateInterface(), true);
  }

  public void getRates(RsBwRates rates) {
    RetroshareJNI.RateInterface_getRates(swigCPtr, this, RsBwRates.getCPtr(rates), rates);
  }

  public int getQueueSize(boolean arg0) {
    return RetroshareJNI.RateInterface_getQueueSize(swigCPtr, this, arg0);
  }

  public float getRate(boolean in) {
    return RetroshareJNI.RateInterface_getRate(swigCPtr, this, in);
  }

  public float getMaxRate(boolean in) {
    return RetroshareJNI.RateInterface_getMaxRate(swigCPtr, this, in);
  }

  public void setMaxRate(boolean in, float val) {
    RetroshareJNI.RateInterface_setMaxRate(swigCPtr, this, in, val);
  }

  public void setRateCap(float val_in, float val_out) {
    RetroshareJNI.RateInterface_setRateCap(swigCPtr, this, val_in, val_out);
  }

}
