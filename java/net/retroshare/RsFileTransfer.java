/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RsFileTransfer extends RsItem {
  private long swigCPtr;

  protected RsFileTransfer(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.RsFileTransfer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RsFileTransfer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RsFileTransfer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public RsFileTransfer() {
    this(RetroshareJNI.new_RsFileTransfer(), true);
  }

  public void clear() {
    RetroshareJNI.RsFileTransfer_clear(swigCPtr, this);
  }

  public SWIGTYPE_p_std__ostream print(SWIGTYPE_p_std__ostream out, int indent) {
    return new SWIGTYPE_p_std__ostream(RetroshareJNI.RsFileTransfer_print__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out), indent), false);
  }

  public SWIGTYPE_p_std__ostream print(SWIGTYPE_p_std__ostream out) {
    return new SWIGTYPE_p_std__ostream(RetroshareJNI.RsFileTransfer_print__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out)), false);
  }

  public void setFile(RsTlvFileItem value) {
    RetroshareJNI.RsFileTransfer_file_set(swigCPtr, this, RsTlvFileItem.getCPtr(value), value);
  }

  public RsTlvFileItem getFile() {
    long cPtr = RetroshareJNI.RsFileTransfer_file_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RsTlvFileItem(cPtr, false);
  }

  public void setAllPeerIds(RsTlvPeerIdSet value) {
    RetroshareJNI.RsFileTransfer_allPeerIds_set(swigCPtr, this, RsTlvPeerIdSet.getCPtr(value), value);
  }

  public RsTlvPeerIdSet getAllPeerIds() {
    long cPtr = RetroshareJNI.RsFileTransfer_allPeerIds_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RsTlvPeerIdSet(cPtr, false);
  }

  public void setCPeerId(SWIGTYPE_p_std__string value) {
    RetroshareJNI.RsFileTransfer_cPeerId_set(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(value));
  }

  public SWIGTYPE_p_std__string getCPeerId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsFileTransfer_cPeerId_get(swigCPtr, this), true);
  }

  public void setState(int value) {
    RetroshareJNI.RsFileTransfer_state_set(swigCPtr, this, value);
  }

  public int getState() {
    return RetroshareJNI.RsFileTransfer_state_get(swigCPtr, this);
  }

  public void setIn(int value) {
    RetroshareJNI.RsFileTransfer_in_set(swigCPtr, this, value);
  }

  public int getIn() {
    return RetroshareJNI.RsFileTransfer_in_get(swigCPtr, this);
  }

  public void setTransferred(java.math.BigInteger value) {
    RetroshareJNI.RsFileTransfer_transferred_set(swigCPtr, this, value);
  }

  public java.math.BigInteger getTransferred() {
    return RetroshareJNI.RsFileTransfer_transferred_get(swigCPtr, this);
  }

  public void setCrate(long value) {
    RetroshareJNI.RsFileTransfer_crate_set(swigCPtr, this, value);
  }

  public long getCrate() {
    return RetroshareJNI.RsFileTransfer_crate_get(swigCPtr, this);
  }

  public void setTrate(long value) {
    RetroshareJNI.RsFileTransfer_trate_set(swigCPtr, this, value);
  }

  public long getTrate() {
    return RetroshareJNI.RsFileTransfer_trate_get(swigCPtr, this);
  }

  public void setLrate(long value) {
    RetroshareJNI.RsFileTransfer_lrate_set(swigCPtr, this, value);
  }

  public long getLrate() {
    return RetroshareJNI.RsFileTransfer_lrate_get(swigCPtr, this);
  }

  public void setLtransfer(long value) {
    RetroshareJNI.RsFileTransfer_ltransfer_set(swigCPtr, this, value);
  }

  public long getLtransfer() {
    return RetroshareJNI.RsFileTransfer_ltransfer_get(swigCPtr, this);
  }

  public void setFlags(long value) {
    RetroshareJNI.RsFileTransfer_flags_set(swigCPtr, this, value);
  }

  public long getFlags() {
    return RetroshareJNI.RsFileTransfer_flags_get(swigCPtr, this);
  }

  public void setChunk_strategy(long value) {
    RetroshareJNI.RsFileTransfer_chunk_strategy_set(swigCPtr, this, value);
  }

  public long getChunk_strategy() {
    return RetroshareJNI.RsFileTransfer_chunk_strategy_get(swigCPtr, this);
  }

  public void setCompressed_chunk_map(CompressedChunkMap value) {
    RetroshareJNI.RsFileTransfer_compressed_chunk_map_set(swigCPtr, this, CompressedChunkMap.getCPtr(value), value);
  }

  public CompressedChunkMap getCompressed_chunk_map() {
    long cPtr = RetroshareJNI.RsFileTransfer_compressed_chunk_map_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CompressedChunkMap(cPtr, false);
  }

}
