/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3Dsdv extends RsDsdv {
  private long swigCPtr;

  protected p3Dsdv(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3Dsdv_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3Dsdv obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3Dsdv(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3Dsdv(p3LinkMgr cm) {
    this(RetroshareJNI.new_p3Dsdv(p3LinkMgr.getCPtr(cm), cm), true);
  }

  public int addDsdvId(RsDsdvId id, SWIGTYPE_p_std__string realHash) {
    return RetroshareJNI.p3Dsdv_addDsdvId(swigCPtr, this, RsDsdvId.getCPtr(id), id, SWIGTYPE_p_std__string.getCPtr(realHash));
  }

  public int dropDsdvId(RsDsdvId id) {
    return RetroshareJNI.p3Dsdv_dropDsdvId(swigCPtr, this, RsDsdvId.getCPtr(id), id);
  }

  public int printDsdvTable(SWIGTYPE_p_std__ostream out) {
    return RetroshareJNI.p3Dsdv_printDsdvTable(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out));
  }

  public int addTestService() {
    return RetroshareJNI.p3Dsdv_addTestService(swigCPtr, this);
  }

  public long getLocalServices(SWIGTYPE_p_std__listT_std__string_t hashes) {
    return RetroshareJNI.p3Dsdv_getLocalServices(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(hashes));
  }

  public long getAllServices(SWIGTYPE_p_std__listT_std__string_t hashes) {
    return RetroshareJNI.p3Dsdv_getAllServices(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(hashes));
  }

  public int getDsdvEntry(SWIGTYPE_p_std__string hash, RsDsdvTableEntry entry) {
    return RetroshareJNI.p3Dsdv_getDsdvEntry(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), RsDsdvTableEntry.getCPtr(entry), entry);
  }

  public int tick() {
    return RetroshareJNI.p3Dsdv_tick(swigCPtr, this);
  }

  public int status() {
    return RetroshareJNI.p3Dsdv_status(swigCPtr, this);
  }

  public void statusChange(SWIGTYPE_p_std__listT_pqipeer_t plist) {
    RetroshareJNI.p3Dsdv_statusChange(swigCPtr, this, SWIGTYPE_p_std__listT_pqipeer_t.getCPtr(plist));
  }

}
