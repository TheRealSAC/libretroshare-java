/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class AuthGPGtest extends AuthGPG {
  private long swigCPtr;

  protected AuthGPGtest(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.AuthGPGtest_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AuthGPGtest obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_AuthGPGtest(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public AuthGPGtest() {
    this(RetroshareJNI.new_AuthGPGtest(), true);
  }

  public boolean availableGPGCertificatesWithPrivateKeys(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPGtest_availableGPGCertificatesWithPrivateKeys(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean printKeys() {
    return RetroshareJNI.AuthGPGtest_printKeys(swigCPtr, this);
  }

  public boolean active() {
    return RetroshareJNI.AuthGPGtest_active(swigCPtr, this);
  }

  public boolean InitAuth() {
    return RetroshareJNI.AuthGPGtest_InitAuth(swigCPtr, this);
  }

  public void run() {
    RetroshareJNI.AuthGPGtest_run(swigCPtr, this);
  }

  public int GPGInit(SWIGTYPE_p_std__string ownId) {
    return RetroshareJNI.AuthGPGtest_GPGInit(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ownId));
  }

  public boolean CloseAuth() {
    return RetroshareJNI.AuthGPGtest_CloseAuth(swigCPtr, this);
  }

  public boolean GeneratePGPCertificate(SWIGTYPE_p_std__string name, SWIGTYPE_p_std__string email, SWIGTYPE_p_std__string passwd, SWIGTYPE_p_std__string pgpId, SWIGTYPE_p_std__string errString) {
    return RetroshareJNI.AuthGPGtest_GeneratePGPCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(name), SWIGTYPE_p_std__string.getCPtr(email), SWIGTYPE_p_std__string.getCPtr(passwd), SWIGTYPE_p_std__string.getCPtr(pgpId), SWIGTYPE_p_std__string.getCPtr(errString));
  }

  public SWIGTYPE_p_std__string getGPGName(SWIGTYPE_p_std__string pgp_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPGtest_getGPGName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id)), true);
  }

  public SWIGTYPE_p_std__string getGPGEmail(SWIGTYPE_p_std__string pgp_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPGtest_getGPGEmail(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id)), true);
  }

  public SWIGTYPE_p_std__string getGPGOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPGtest_getGPGOwnId(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getGPGOwnName() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPGtest_getGPGOwnName(swigCPtr, this), true);
  }

  public boolean getGPGDetails(SWIGTYPE_p_std__string id, RsPeerDetails d) {
    return RetroshareJNI.AuthGPGtest_getGPGDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), RsPeerDetails.getCPtr(d), d);
  }

  public boolean getGPGAllList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPGtest_getGPGAllList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGValidList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPGtest_getGPGValidList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGAcceptedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPGtest_getGPGAcceptedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean getGPGSignedList(SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.AuthGPGtest_getGPGSignedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean isGPGValid(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_isGPGValid(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean isGPGSigned(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_isGPGSigned(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean isGPGAccepted(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_isGPGAccepted(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean isGPGId(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_isGPGId(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean LoadCertificateFromString(SWIGTYPE_p_std__string pem, SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__string error_string) {
    return RetroshareJNI.AuthGPGtest_LoadCertificateFromString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pem), SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__string.getCPtr(error_string));
  }

  public SWIGTYPE_p_std__string SaveCertificateToString(SWIGTYPE_p_std__string id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthGPGtest_SaveCertificateToString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id)), true);
  }

  public boolean setAcceptToConnectGPGCertificate(SWIGTYPE_p_std__string gpg_id, boolean acceptance) {
    return RetroshareJNI.AuthGPGtest_setAcceptToConnectGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), acceptance);
  }

  public boolean SignCertificateLevel0(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_SignCertificateLevel0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean RevokeCertificate(SWIGTYPE_p_std__string id) {
    return RetroshareJNI.AuthGPGtest_RevokeCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id));
  }

  public boolean TrustCertificate(SWIGTYPE_p_std__string id, int trustlvl) {
    return RetroshareJNI.AuthGPGtest_TrustCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), trustlvl);
  }

  public boolean SignDataBin(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char sign, SWIGTYPE_p_unsigned_int signlen) {
    return RetroshareJNI.AuthGPGtest_SignDataBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(sign), SWIGTYPE_p_unsigned_int.getCPtr(signlen));
  }

  public boolean VerifySignBin(SWIGTYPE_p_void arg0, long arg1, SWIGTYPE_p_unsigned_char arg2, long arg3, SWIGTYPE_p_std__string withfingerprint) {
    return RetroshareJNI.AuthGPGtest_VerifySignBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0), arg1, SWIGTYPE_p_unsigned_char.getCPtr(arg2), arg3, SWIGTYPE_p_std__string.getCPtr(withfingerprint));
  }

  public boolean decryptText(SWIGTYPE_p_gpgme_data_t CIPHER, SWIGTYPE_p_gpgme_data_t PLAIN) {
    return RetroshareJNI.AuthGPGtest_decryptText(swigCPtr, this, SWIGTYPE_p_gpgme_data_t.getCPtr(CIPHER), SWIGTYPE_p_gpgme_data_t.getCPtr(PLAIN));
  }

  public boolean encryptText(SWIGTYPE_p_gpgme_data_t PLAIN, SWIGTYPE_p_gpgme_data_t CIPHER) {
    return RetroshareJNI.AuthGPGtest_encryptText(swigCPtr, this, SWIGTYPE_p_gpgme_data_t.getCPtr(PLAIN), SWIGTYPE_p_gpgme_data_t.getCPtr(CIPHER));
  }

  public boolean addService(AuthGPGService service) {
    return RetroshareJNI.AuthGPGtest_addService(swigCPtr, this, AuthGPGService.getCPtr(service), service);
  }

}
