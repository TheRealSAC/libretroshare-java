/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3MsgService extends p3Service {
  private long swigCPtr;

  protected p3MsgService(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3MsgService_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3MsgService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3MsgService(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3MsgService(p3LinkMgr lm) {
    this(RetroshareJNI.new_p3MsgService(p3LinkMgr.getCPtr(lm), lm), true);
  }

  public boolean getMessageSummaries(SWIGTYPE_p_std__listT_MsgInfoSummary_t msgList) {
    return RetroshareJNI.p3MsgService_getMessageSummaries(swigCPtr, this, SWIGTYPE_p_std__listT_MsgInfoSummary_t.getCPtr(msgList));
  }

  public boolean getMessage(SWIGTYPE_p_std__string mid, MessageInfo msg) {
    return RetroshareJNI.p3MsgService_getMessage(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid), MessageInfo.getCPtr(msg), msg);
  }

  public void getMessageCount(SWIGTYPE_p_unsigned_int pnInbox, SWIGTYPE_p_unsigned_int pnInboxNew, SWIGTYPE_p_unsigned_int pnOutbox, SWIGTYPE_p_unsigned_int pnDraftbox, SWIGTYPE_p_unsigned_int pnSentbox, SWIGTYPE_p_unsigned_int pnTrashbox) {
    RetroshareJNI.p3MsgService_getMessageCount(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(pnInbox), SWIGTYPE_p_unsigned_int.getCPtr(pnInboxNew), SWIGTYPE_p_unsigned_int.getCPtr(pnOutbox), SWIGTYPE_p_unsigned_int.getCPtr(pnDraftbox), SWIGTYPE_p_unsigned_int.getCPtr(pnSentbox), SWIGTYPE_p_unsigned_int.getCPtr(pnTrashbox));
  }

  public boolean decryptMessage(SWIGTYPE_p_std__string mid) {
    return RetroshareJNI.p3MsgService_decryptMessage(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid));
  }

  public boolean removeMsgId(SWIGTYPE_p_std__string mid) {
    return RetroshareJNI.p3MsgService_removeMsgId(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid));
  }

  public boolean markMsgIdRead(SWIGTYPE_p_std__string mid, boolean bUnreadByUser) {
    return RetroshareJNI.p3MsgService_markMsgIdRead(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid), bUnreadByUser);
  }

  public boolean setMsgFlag(SWIGTYPE_p_std__string mid, long flag, long mask) {
    return RetroshareJNI.p3MsgService_setMsgFlag(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid), flag, mask);
  }

  public boolean getMsgParentId(SWIGTYPE_p_std__string msgId, SWIGTYPE_p_std__string msgParentId) {
    return RetroshareJNI.p3MsgService_getMsgParentId(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(msgId), SWIGTYPE_p_std__string.getCPtr(msgParentId));
  }

  public boolean setMsgParentId(long msgId, long msgParentId) {
    return RetroshareJNI.p3MsgService_setMsgParentId(swigCPtr, this, msgId, msgParentId);
  }

  public boolean MessageSend(MessageInfo info) {
    return RetroshareJNI.p3MsgService_MessageSend(swigCPtr, this, MessageInfo.getCPtr(info), info);
  }

  public boolean SystemMessage(SWIGTYPE_p_std__wstring title, SWIGTYPE_p_std__wstring message, long systemFlag) {
    return RetroshareJNI.p3MsgService_SystemMessage(swigCPtr, this, SWIGTYPE_p_std__wstring.getCPtr(title), SWIGTYPE_p_std__wstring.getCPtr(message), systemFlag);
  }

  public boolean MessageToDraft(MessageInfo info, SWIGTYPE_p_std__string msgParentId) {
    return RetroshareJNI.p3MsgService_MessageToDraft(swigCPtr, this, MessageInfo.getCPtr(info), info, SWIGTYPE_p_std__string.getCPtr(msgParentId));
  }

  public boolean MessageToTrash(SWIGTYPE_p_std__string mid, boolean bTrash) {
    return RetroshareJNI.p3MsgService_MessageToTrash(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(mid), bTrash);
  }

  public boolean getMessageTagTypes(MsgTagType tags) {
    return RetroshareJNI.p3MsgService_getMessageTagTypes(swigCPtr, this, MsgTagType.getCPtr(tags), tags);
  }

  public boolean setMessageTagType(long tagId, SWIGTYPE_p_std__string text, long rgb_color) {
    return RetroshareJNI.p3MsgService_setMessageTagType(swigCPtr, this, tagId, SWIGTYPE_p_std__string.getCPtr(text), rgb_color);
  }

  public boolean removeMessageTagType(long tagId) {
    return RetroshareJNI.p3MsgService_removeMessageTagType(swigCPtr, this, tagId);
  }

  public boolean getMessageTag(SWIGTYPE_p_std__string msgId, MsgTagInfo info) {
    return RetroshareJNI.p3MsgService_getMessageTag(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(msgId), MsgTagInfo.getCPtr(info), info);
  }

  public boolean setMessageTag(SWIGTYPE_p_std__string msgId, long tagId, boolean set) {
    return RetroshareJNI.p3MsgService_setMessageTag(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(msgId), tagId, set);
  }

  public boolean resetMessageStandardTagTypes(MsgTagType tags) {
    return RetroshareJNI.p3MsgService_resetMessageStandardTagTypes(swigCPtr, this, MsgTagType.getCPtr(tags), tags);
  }

  public void loadWelcomeMsg() {
    RetroshareJNI.p3MsgService_loadWelcomeMsg(swigCPtr, this);
  }

  public int tick() {
    return RetroshareJNI.p3MsgService_tick(swigCPtr, this);
  }

  public int status() {
    return RetroshareJNI.p3MsgService_status(swigCPtr, this);
  }

  public RsSerialiser setupSerialiser() {
    long cPtr = RetroshareJNI.p3MsgService_setupSerialiser(swigCPtr, this);
    return (cPtr == 0) ? null : new RsSerialiser(cPtr, false);
  }

  public boolean saveList(SWIGTYPE_p_bool cleanup, SWIGTYPE_p_std__listT_RsItem_p_t arg1) {
    return RetroshareJNI.p3MsgService_saveList(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(cleanup), SWIGTYPE_p_std__listT_RsItem_p_t.getCPtr(arg1));
  }

  public boolean loadList(SWIGTYPE_p_std__listT_RsItem_p_t load) {
    return RetroshareJNI.p3MsgService_loadList(swigCPtr, this, SWIGTYPE_p_std__listT_RsItem_p_t.getCPtr(load));
  }

  public void saveDone() {
    RetroshareJNI.p3MsgService_saveDone(swigCPtr, this);
  }

  public void statusChange(SWIGTYPE_p_std__listT_pqipeer_t plist) {
    RetroshareJNI.p3MsgService_statusChange(swigCPtr, this, SWIGTYPE_p_std__listT_pqipeer_t.getCPtr(plist));
  }

  public int checkOutgoingMessages() {
    return RetroshareJNI.p3MsgService_checkOutgoingMessages(swigCPtr, this);
  }

  public void connectToTurtleRouter(p3turtle arg0) {
    RetroshareJNI.p3MsgService_connectToTurtleRouter(swigCPtr, this, p3turtle.getCPtr(arg0), arg0);
  }

  public boolean createDistantOfflineMessengingInvite(SWIGTYPE_p_time_t time_of_validity, SWIGTYPE_p_std__string hash) {
    return RetroshareJNI.p3MsgService_createDistantOfflineMessengingInvite(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(time_of_validity), SWIGTYPE_p_std__string.getCPtr(hash));
  }

  public boolean getDistantOfflineMessengingInvites(SWIGTYPE_p_std__vectorT_DistantOfflineMessengingInvite_t invites) {
    return RetroshareJNI.p3MsgService_getDistantOfflineMessengingInvites(swigCPtr, this, SWIGTYPE_p_std__vectorT_DistantOfflineMessengingInvite_t.getCPtr(invites));
  }

  public void enableDistantMessaging(boolean b) {
    RetroshareJNI.p3MsgService_enableDistantMessaging(swigCPtr, this, b);
  }

  public boolean distantMessagingEnabled() {
    return RetroshareJNI.p3MsgService_distantMessagingEnabled(swigCPtr, this);
  }

  public boolean getDistantMessageHash(SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_std__string hash) {
    return RetroshareJNI.p3MsgService_getDistantMessageHash(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_std__string.getCPtr(hash));
  }

  public void sendPrivateMsgItem(RsMsgItem arg0) {
    RetroshareJNI.p3MsgService_sendPrivateMsgItem(swigCPtr, this, RsMsgItem.getCPtr(arg0), arg0);
  }

}
