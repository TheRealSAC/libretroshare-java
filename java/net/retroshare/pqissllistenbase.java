/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class pqissllistenbase extends pqilistener {
  private long swigCPtr;

  protected pqissllistenbase(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.pqissllistenbase_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(pqissllistenbase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_pqissllistenbase(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public int tick() {
    return RetroshareJNI.pqissllistenbase_tick(swigCPtr, this);
  }

  public int status() {
    return RetroshareJNI.pqissllistenbase_status(swigCPtr, this);
  }

  public int setListenAddr(SWIGTYPE_p_sockaddr_in addr) {
    return RetroshareJNI.pqissllistenbase_setListenAddr(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public int setuplisten() {
    return RetroshareJNI.pqissllistenbase_setuplisten(swigCPtr, this);
  }

  public int resetlisten() {
    return RetroshareJNI.pqissllistenbase_resetlisten(swigCPtr, this);
  }

  public int acceptconnection() {
    return RetroshareJNI.pqissllistenbase_acceptconnection(swigCPtr, this);
  }

  public int continueaccepts() {
    return RetroshareJNI.pqissllistenbase_continueaccepts(swigCPtr, this);
  }

  public int finaliseAccepts() {
    return RetroshareJNI.pqissllistenbase_finaliseAccepts(swigCPtr, this);
  }

  public int continueSSL(SWIGTYPE_p_pqissllistenbase__IncomingSSLInfo arg0, boolean arg1) {
    return RetroshareJNI.pqissllistenbase_continueSSL(swigCPtr, this, SWIGTYPE_p_pqissllistenbase__IncomingSSLInfo.getCPtr(arg0), arg1);
  }

  public int closeConnection(int fd, SWIGTYPE_p_SSL ssl) {
    return RetroshareJNI.pqissllistenbase_closeConnection(swigCPtr, this, fd, SWIGTYPE_p_SSL.getCPtr(ssl));
  }

  public int isSSLActive(int fd, SWIGTYPE_p_SSL ssl) {
    return RetroshareJNI.pqissllistenbase_isSSLActive(swigCPtr, this, fd, SWIGTYPE_p_SSL.getCPtr(ssl));
  }

  public int completeConnection(int sockfd, SWIGTYPE_p_pqissllistenbase__IncomingSSLInfo arg1) {
    return RetroshareJNI.pqissllistenbase_completeConnection(swigCPtr, this, sockfd, SWIGTYPE_p_pqissllistenbase__IncomingSSLInfo.getCPtr(arg1));
  }

  public int finaliseConnection(int fd, SWIGTYPE_p_SSL ssl, SWIGTYPE_p_std__string peerId, SWIGTYPE_p_sockaddr_in raddr) {
    return RetroshareJNI.pqissllistenbase_finaliseConnection(swigCPtr, this, fd, SWIGTYPE_p_SSL.getCPtr(ssl), SWIGTYPE_p_std__string.getCPtr(peerId), SWIGTYPE_p_sockaddr_in.getCPtr(raddr));
  }

}
