/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class Chunk {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Chunk(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Chunk obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_Chunk(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void init(long blockSize, short blocks) {
    RetroshareJNI.Chunk_init(swigCPtr, this, blockSize, blocks);
  }

  public void free() {
    RetroshareJNI.Chunk_free(swigCPtr, this);
  }

  public SWIGTYPE_p_void allocate(long arg0) {
    long cPtr = RetroshareJNI.Chunk_allocate(swigCPtr, this, arg0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void deallocate(SWIGTYPE_p_void p, long blockSize) {
    RetroshareJNI.Chunk_deallocate(swigCPtr, this, SWIGTYPE_p_void.getCPtr(p), blockSize);
  }

  public void set_data(SWIGTYPE_p_unsigned_char value) {
    RetroshareJNI.Chunk__data_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char get_data() {
    long cPtr = RetroshareJNI.Chunk__data_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void set_firstAvailableBlock(short value) {
    RetroshareJNI.Chunk__firstAvailableBlock_set(swigCPtr, this, value);
  }

  public short get_firstAvailableBlock() {
    return RetroshareJNI.Chunk__firstAvailableBlock_get(swigCPtr, this);
  }

  public void set_blocksAvailable(short value) {
    RetroshareJNI.Chunk__blocksAvailable_set(swigCPtr, this, value);
  }

  public short get_blocksAvailable() {
    return RetroshareJNI.Chunk__blocksAvailable_get(swigCPtr, this);
  }

  public void printStatistics(int blockSize) {
    RetroshareJNI.Chunk_printStatistics(swigCPtr, this, blockSize);
  }

  public Chunk() {
    this(RetroshareJNI.new_Chunk(), true);
  }

}
