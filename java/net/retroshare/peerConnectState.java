/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class peerConnectState {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected peerConnectState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(peerConnectState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_peerConnectState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public peerConnectState() {
    this(RetroshareJNI.new_peerConnectState(), true);
  }

  public void setId(SWIGTYPE_p_std__string value) {
    RetroshareJNI.peerConnectState_id_set(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(value));
  }

  public SWIGTYPE_p_std__string getId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.peerConnectState_id_get(swigCPtr, this), true);
  }

  public void setDhtVisible(boolean value) {
    RetroshareJNI.peerConnectState_dhtVisible_set(swigCPtr, this, value);
  }

  public boolean getDhtVisible() {
    return RetroshareJNI.peerConnectState_dhtVisible_get(swigCPtr, this);
  }

  public void setConnecttype(long value) {
    RetroshareJNI.peerConnectState_connecttype_set(swigCPtr, this, value);
  }

  public long getConnecttype() {
    return RetroshareJNI.peerConnectState_connecttype_get(swigCPtr, this);
  }

  public void setLastavailable(SWIGTYPE_p_time_t value) {
    RetroshareJNI.peerConnectState_lastavailable_set(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(value));
  }

  public SWIGTYPE_p_time_t getLastavailable() {
    return new SWIGTYPE_p_time_t(RetroshareJNI.peerConnectState_lastavailable_get(swigCPtr, this), true);
  }

  public void setLastattempt(SWIGTYPE_p_time_t value) {
    RetroshareJNI.peerConnectState_lastattempt_set(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(value));
  }

  public SWIGTYPE_p_time_t getLastattempt() {
    return new SWIGTYPE_p_time_t(RetroshareJNI.peerConnectState_lastattempt_get(swigCPtr, this), true);
  }

  public void setName(SWIGTYPE_p_std__string value) {
    RetroshareJNI.peerConnectState_name_set(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(value));
  }

  public SWIGTYPE_p_std__string getName() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.peerConnectState_name_get(swigCPtr, this), true);
  }

  public void setState(long value) {
    RetroshareJNI.peerConnectState_state_set(swigCPtr, this, value);
  }

  public long getState() {
    return RetroshareJNI.peerConnectState_state_get(swigCPtr, this);
  }

  public void setActions(long value) {
    RetroshareJNI.peerConnectState_actions_set(swigCPtr, this, value);
  }

  public long getActions() {
    return RetroshareJNI.peerConnectState_actions_get(swigCPtr, this);
  }

  public void setLinkType(long value) {
    RetroshareJNI.peerConnectState_linkType_set(swigCPtr, this, value);
  }

  public long getLinkType() {
    return RetroshareJNI.peerConnectState_linkType_get(swigCPtr, this);
  }

  public void setSource(long value) {
    RetroshareJNI.peerConnectState_source_set(swigCPtr, this, value);
  }

  public long getSource() {
    return RetroshareJNI.peerConnectState_source_get(swigCPtr, this);
  }

  public void setDht(peerAddrInfo value) {
    RetroshareJNI.peerConnectState_dht_set(swigCPtr, this, peerAddrInfo.getCPtr(value), value);
  }

  public peerAddrInfo getDht() {
    long cPtr = RetroshareJNI.peerConnectState_dht_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peerAddrInfo(cPtr, false);
  }

  public void setDisc(peerAddrInfo value) {
    RetroshareJNI.peerConnectState_disc_set(swigCPtr, this, peerAddrInfo.getCPtr(value), value);
  }

  public peerAddrInfo getDisc() {
    long cPtr = RetroshareJNI.peerConnectState_disc_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peerAddrInfo(cPtr, false);
  }

  public void setPeer(peerAddrInfo value) {
    RetroshareJNI.peerConnectState_peer_set(swigCPtr, this, peerAddrInfo.getCPtr(value), value);
  }

  public peerAddrInfo getPeer() {
    long cPtr = RetroshareJNI.peerConnectState_peer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peerAddrInfo(cPtr, false);
  }

  public void setInConnAttempt(boolean value) {
    RetroshareJNI.peerConnectState_inConnAttempt_set(swigCPtr, this, value);
  }

  public boolean getInConnAttempt() {
    return RetroshareJNI.peerConnectState_inConnAttempt_get(swigCPtr, this);
  }

  public void setCurrentConnAddrAttempt(peerConnectAddress value) {
    RetroshareJNI.peerConnectState_currentConnAddrAttempt_set(swigCPtr, this, peerConnectAddress.getCPtr(value), value);
  }

  public peerConnectAddress getCurrentConnAddrAttempt() {
    long cPtr = RetroshareJNI.peerConnectState_currentConnAddrAttempt_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peerConnectAddress(cPtr, false);
  }

  public void setConnAddrs(SWIGTYPE_p_std__listT_peerConnectAddress_t value) {
    RetroshareJNI.peerConnectState_connAddrs_set(swigCPtr, this, SWIGTYPE_p_std__listT_peerConnectAddress_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__listT_peerConnectAddress_t getConnAddrs() {
    long cPtr = RetroshareJNI.peerConnectState_connAddrs_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__listT_peerConnectAddress_t(cPtr, false);
  }

  public void setWasDeniedConnection(boolean value) {
    RetroshareJNI.peerConnectState_wasDeniedConnection_set(swigCPtr, this, value);
  }

  public boolean getWasDeniedConnection() {
    return RetroshareJNI.peerConnectState_wasDeniedConnection_get(swigCPtr, this);
  }

  public void setDeniedTS(SWIGTYPE_p_time_t value) {
    RetroshareJNI.peerConnectState_deniedTS_set(swigCPtr, this, SWIGTYPE_p_time_t.getCPtr(value));
  }

  public SWIGTYPE_p_time_t getDeniedTS() {
    return new SWIGTYPE_p_time_t(RetroshareJNI.peerConnectState_deniedTS_get(swigCPtr, this), true);
  }

  public void setDeniedInConnAttempt(boolean value) {
    RetroshareJNI.peerConnectState_deniedInConnAttempt_set(swigCPtr, this, value);
  }

  public boolean getDeniedInConnAttempt() {
    return RetroshareJNI.peerConnectState_deniedInConnAttempt_get(swigCPtr, this);
  }

  public void setDeniedConnectionAttempt(peerConnectAddress value) {
    RetroshareJNI.peerConnectState_deniedConnectionAttempt_set(swigCPtr, this, peerConnectAddress.getCPtr(value), value);
  }

  public peerConnectAddress getDeniedConnectionAttempt() {
    long cPtr = RetroshareJNI.peerConnectState_deniedConnectionAttempt_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peerConnectAddress(cPtr, false);
  }

}
