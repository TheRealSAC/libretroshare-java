/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class testConnect extends pqiconnect {
  private long swigCPtr;

  protected testConnect(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.testConnect_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(testConnect obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_testConnect(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public testConnect(RsSerialiser rss, NetBinInterface ni_in) {
    this(RetroshareJNI.new_testConnect(RsSerialiser.getCPtr(rss), rss, NetBinInterface.getCPtr(ni_in), ni_in), true);
  }

  public int tick() {
    return RetroshareJNI.testConnect_tick(swigCPtr, this);
  }

  public int connect(SWIGTYPE_p_sockaddr_in raddr) {
    return RetroshareJNI.testConnect_connect(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(raddr));
  }

  public int listen() {
    return RetroshareJNI.testConnect_listen(swigCPtr, this);
  }

  public int stoplistening() {
    return RetroshareJNI.testConnect_stoplistening(swigCPtr, this);
  }

  public int reset() {
    return RetroshareJNI.testConnect_reset(swigCPtr, this);
  }

  public boolean connect_parameter(long type, long value) {
    return RetroshareJNI.testConnect_connect_parameter(swigCPtr, this, type, value);
  }

  public int getConnectAddress(SWIGTYPE_p_sockaddr_in raddr) {
    return RetroshareJNI.testConnect_getConnectAddress(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(raddr));
  }

}
