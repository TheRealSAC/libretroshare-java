/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class AuthSSLtest extends AuthSSL {
  private long swigCPtr;

  protected AuthSSLtest(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.AuthSSLtest_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AuthSSLtest obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_AuthSSLtest(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean validateOwnCertificate(SWIGTYPE_p_X509 x509, SWIGTYPE_p_EVP_PKEY pkey) {
    return RetroshareJNI.AuthSSLtest_validateOwnCertificate(swigCPtr, this, SWIGTYPE_p_X509.getCPtr(x509), SWIGTYPE_p_EVP_PKEY.getCPtr(pkey));
  }

  public boolean active() {
    return RetroshareJNI.AuthSSLtest_active(swigCPtr, this);
  }

  public int InitAuth(String srvr_cert, String priv_key, String passwd) {
    return RetroshareJNI.AuthSSLtest_InitAuth(swigCPtr, this, srvr_cert, priv_key, passwd);
  }

  public boolean CloseAuth() {
    return RetroshareJNI.AuthSSLtest_CloseAuth(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string OwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthSSLtest_OwnId(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getOwnLocation() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthSSLtest_getOwnLocation(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string SaveOwnCertificateToString() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.AuthSSLtest_SaveOwnCertificateToString(swigCPtr, this), true);
  }

  public boolean SignData(SWIGTYPE_p_std__string input, SWIGTYPE_p_std__string sign) {
    return RetroshareJNI.AuthSSLtest_SignData__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(input), SWIGTYPE_p_std__string.getCPtr(sign));
  }

  public boolean SignData(SWIGTYPE_p_void data, long len, SWIGTYPE_p_std__string sign) {
    return RetroshareJNI.AuthSSLtest_SignData__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_std__string.getCPtr(sign));
  }

  public boolean SignDataBin(SWIGTYPE_p_std__string arg0, SWIGTYPE_p_unsigned_char arg1, SWIGTYPE_p_unsigned_int arg2) {
    return RetroshareJNI.AuthSSLtest_SignDataBin__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(arg0), SWIGTYPE_p_unsigned_char.getCPtr(arg1), SWIGTYPE_p_unsigned_int.getCPtr(arg2));
  }

  public boolean SignDataBin(SWIGTYPE_p_void arg0, long arg1, SWIGTYPE_p_unsigned_char arg2, SWIGTYPE_p_unsigned_int arg3) {
    return RetroshareJNI.AuthSSLtest_SignDataBin__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0), arg1, SWIGTYPE_p_unsigned_char.getCPtr(arg2), SWIGTYPE_p_unsigned_int.getCPtr(arg3));
  }

  public boolean VerifyOwnSignBin(SWIGTYPE_p_void arg0, long arg1, SWIGTYPE_p_unsigned_char arg2, long arg3) {
    return RetroshareJNI.AuthSSLtest_VerifyOwnSignBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0), arg1, SWIGTYPE_p_unsigned_char.getCPtr(arg2), arg3);
  }

  public boolean VerifySignBin(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char sign, long signlen, SWIGTYPE_p_std__string sslId) {
    return RetroshareJNI.AuthSSLtest_VerifySignBin(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(sign), signlen, SWIGTYPE_p_std__string.getCPtr(sslId));
  }

  public boolean encrypt(SWIGTYPE_p_p_void out, SWIGTYPE_p_int outlen, SWIGTYPE_p_void in, int inlen, SWIGTYPE_p_std__string peerId) {
    return RetroshareJNI.AuthSSLtest_encrypt(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(out), SWIGTYPE_p_int.getCPtr(outlen), SWIGTYPE_p_void.getCPtr(in), inlen, SWIGTYPE_p_std__string.getCPtr(peerId));
  }

  public boolean decrypt(SWIGTYPE_p_p_void out, SWIGTYPE_p_int outlen, SWIGTYPE_p_void in, int inlen) {
    return RetroshareJNI.AuthSSLtest_decrypt(swigCPtr, this, SWIGTYPE_p_p_void.getCPtr(out), SWIGTYPE_p_int.getCPtr(outlen), SWIGTYPE_p_void.getCPtr(in), inlen);
  }

  public SWIGTYPE_p_X509 SignX509ReqWithGPG(SWIGTYPE_p_X509_REQ req, int days) {
    long cPtr = RetroshareJNI.AuthSSLtest_SignX509ReqWithGPG(swigCPtr, this, SWIGTYPE_p_X509_REQ.getCPtr(req), days);
    return (cPtr == 0) ? null : new SWIGTYPE_p_X509(cPtr, false);
  }

  public boolean AuthX509WithGPG(SWIGTYPE_p_X509 x509) {
    return RetroshareJNI.AuthSSLtest_AuthX509WithGPG(swigCPtr, this, SWIGTYPE_p_X509.getCPtr(x509));
  }

  public int VerifyX509Callback(int preverify_ok, SWIGTYPE_p_X509_STORE_CTX ctx) {
    return RetroshareJNI.AuthSSLtest_VerifyX509Callback(swigCPtr, this, preverify_ok, SWIGTYPE_p_X509_STORE_CTX.getCPtr(ctx));
  }

  public boolean ValidateCertificate(SWIGTYPE_p_X509 x509, SWIGTYPE_p_std__string peerId) {
    return RetroshareJNI.AuthSSLtest_ValidateCertificate(swigCPtr, this, SWIGTYPE_p_X509.getCPtr(x509), SWIGTYPE_p_std__string.getCPtr(peerId));
  }

  public SWIGTYPE_p_SSL_CTX getCTX() {
    long cPtr = RetroshareJNI.AuthSSLtest_getCTX(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_SSL_CTX(cPtr, false);
  }

  public boolean FailedCertificate(SWIGTYPE_p_X509 x509, boolean incoming) {
    return RetroshareJNI.AuthSSLtest_FailedCertificate(swigCPtr, this, SWIGTYPE_p_X509.getCPtr(x509), incoming);
  }

  public boolean CheckCertificate(SWIGTYPE_p_std__string peerId, SWIGTYPE_p_X509 x509) {
    return RetroshareJNI.AuthSSLtest_CheckCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(peerId), SWIGTYPE_p_X509.getCPtr(x509));
  }

}
