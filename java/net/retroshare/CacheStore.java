/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class CacheStore {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CacheStore(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CacheStore obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_CacheStore(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CacheStore(int t, boolean m, CacheStrapper cs, CacheTransfer cft, SWIGTYPE_p_std__string cachedir) {
    this(RetroshareJNI.new_CacheStore(t, m, CacheStrapper.getCPtr(cs), cs, CacheTransfer.getCPtr(cft), cft, SWIGTYPE_p_std__string.getCPtr(cachedir)), true);
  }

  public boolean getStoredCache(RsCacheData data) {
    return RetroshareJNI.CacheStore_getStoredCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public boolean getAllStoredCaches(SWIGTYPE_p_std__listT_RsCacheData_t data) {
    return RetroshareJNI.CacheStore_getAllStoredCaches(swigCPtr, this, SWIGTYPE_p_std__listT_RsCacheData_t.getCPtr(data));
  }

  public void availableCache(RsCacheData data) {
    RetroshareJNI.CacheStore_availableCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public void downloadedCache(RsCacheData data) {
    RetroshareJNI.CacheStore_downloadedCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public void failedCache(RsCacheData data) {
    RetroshareJNI.CacheStore_failedCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public boolean isPeerAcceptedAsCacheProvider(SWIGTYPE_p_std__string arg0) {
    return RetroshareJNI.CacheStore_isPeerAcceptedAsCacheProvider(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(arg0));
  }

  public boolean fetchCache(RsCacheData data) {
    return RetroshareJNI.CacheStore_fetchCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public int nameCache(RsCacheData data) {
    return RetroshareJNI.CacheStore_nameCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public int loadCache(RsCacheData data) {
    return RetroshareJNI.CacheStore_loadCache(swigCPtr, this, RsCacheData.getCPtr(data), data);
  }

  public SWIGTYPE_p_std__string getCacheDir() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.CacheStore_getCacheDir(swigCPtr, this), true);
  }

  public boolean isMultiCache() {
    return RetroshareJNI.CacheStore_isMultiCache(swigCPtr, this);
  }

  public int getCacheType() {
    return RetroshareJNI.CacheStore_getCacheType(swigCPtr, this);
  }

  public void listCaches(SWIGTYPE_p_std__ostream out) {
    RetroshareJNI.CacheStore_listCaches(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(out));
  }

}
