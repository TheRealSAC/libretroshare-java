/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3disc extends p3Service {
  private long swigCPtr;

  protected p3disc(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3disc_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3disc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3disc(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3disc(p3PeerMgr pm, p3LinkMgr lm, p3NetMgr nm, pqipersongrp persGrp) {
    this(RetroshareJNI.new_p3disc(p3PeerMgr.getCPtr(pm), pm, p3LinkMgr.getCPtr(lm), lm, p3NetMgr.getCPtr(nm), nm, pqipersongrp.getCPtr(persGrp), persGrp), true);
  }

  public void statusChange(SWIGTYPE_p_std__listT_pqipeer_t plist) {
    RetroshareJNI.p3disc_statusChange(swigCPtr, this, SWIGTYPE_p_std__listT_pqipeer_t.getCPtr(plist));
  }

  public int tick() {
    return RetroshareJNI.p3disc_tick(swigCPtr, this);
  }

  public boolean potentialGPGproxies(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__listT_std__string_t proxyGPGIds) {
    return RetroshareJNI.p3disc_potentialGPGproxies(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__listT_std__string_t.getCPtr(proxyGPGIds));
  }

  public boolean potentialproxies(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__listT_std__string_t proxyIds) {
    return RetroshareJNI.p3disc_potentialproxies(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__listT_std__string_t.getCPtr(proxyIds));
  }

  public void getversions(SWIGTYPE_p_std__mapT_std__string_std__string_t versions) {
    RetroshareJNI.p3disc_getversions(swigCPtr, this, SWIGTYPE_p_std__mapT_std__string_std__string_t.getCPtr(versions));
  }

  public void getWaitingDiscCount(SWIGTYPE_p_unsigned_int sendCount, SWIGTYPE_p_unsigned_int recvCount) {
    RetroshareJNI.p3disc_getWaitingDiscCount(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(sendCount), SWIGTYPE_p_unsigned_int.getCPtr(recvCount));
  }

  public AuthGPGOperation getGPGOperation() {
    long cPtr = RetroshareJNI.p3disc_getGPGOperation(swigCPtr, this);
    return (cPtr == 0) ? null : new AuthGPGOperation(cPtr, false);
  }

  public void setGPGOperation(AuthGPGOperation operation) {
    RetroshareJNI.p3disc_setGPGOperation(swigCPtr, this, AuthGPGOperation.getCPtr(operation), operation);
  }

}
