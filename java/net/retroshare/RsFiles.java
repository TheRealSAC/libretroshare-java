/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RsFiles {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RsFiles(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RsFiles obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RsFiles(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean alreadyHaveFile(SWIGTYPE_p_std__string hash, FileInfo info) {
    return RetroshareJNI.RsFiles_alreadyHaveFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), FileInfo.getCPtr(info), info);
  }

  public boolean FileRequest(SWIGTYPE_p_std__string fname, SWIGTYPE_p_std__string hash, java.math.BigInteger size, SWIGTYPE_p_std__string dest, SWIGTYPE_p_t_RsFlags32T_0x4228af_t flags, SWIGTYPE_p_std__listT_std__string_t srcIds) {
    return RetroshareJNI.RsFiles_FileRequest(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(fname), SWIGTYPE_p_std__string.getCPtr(hash), size, SWIGTYPE_p_std__string.getCPtr(dest), SWIGTYPE_p_t_RsFlags32T_0x4228af_t.getCPtr(flags), SWIGTYPE_p_std__listT_std__string_t.getCPtr(srcIds));
  }

  public boolean FileCancel(SWIGTYPE_p_std__string hash) {
    return RetroshareJNI.RsFiles_FileCancel(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash));
  }

  public boolean setDestinationDirectory(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string new_path) {
    return RetroshareJNI.RsFiles_setDestinationDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(new_path));
  }

  public boolean setDestinationName(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string new_name) {
    return RetroshareJNI.RsFiles_setDestinationName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(new_name));
  }

  public boolean setChunkStrategy(SWIGTYPE_p_std__string hash, FileChunksInfo.ChunkStrategy arg1) {
    return RetroshareJNI.RsFiles_setChunkStrategy(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), arg1.swigValue());
  }

  public void setDefaultChunkStrategy(FileChunksInfo.ChunkStrategy arg0) {
    RetroshareJNI.RsFiles_setDefaultChunkStrategy(swigCPtr, this, arg0.swigValue());
  }

  public FileChunksInfo.ChunkStrategy defaultChunkStrategy() {
    return FileChunksInfo.ChunkStrategy.swigToEnum(RetroshareJNI.RsFiles_defaultChunkStrategy(swigCPtr, this));
  }

  public long freeDiskSpaceLimit() {
    return RetroshareJNI.RsFiles_freeDiskSpaceLimit(swigCPtr, this);
  }

  public void setFreeDiskSpaceLimit(long size_in_mb) {
    RetroshareJNI.RsFiles_setFreeDiskSpaceLimit(swigCPtr, this, size_in_mb);
  }

  public boolean FileControl(SWIGTYPE_p_std__string hash, long flags) {
    return RetroshareJNI.RsFiles_FileControl(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), flags);
  }

  public boolean FileClearCompleted() {
    return RetroshareJNI.RsFiles_FileClearCompleted(swigCPtr, this);
  }

  public long getMinPrioritizedTransfers() {
    return RetroshareJNI.RsFiles_getMinPrioritizedTransfers(swigCPtr, this);
  }

  public void setMinPrioritizedTransfers(long s) {
    RetroshareJNI.RsFiles_setMinPrioritizedTransfers(swigCPtr, this, s);
  }

  public long getQueueSize() {
    return RetroshareJNI.RsFiles_getQueueSize(swigCPtr, this);
  }

  public void setQueueSize(long s) {
    RetroshareJNI.RsFiles_setQueueSize(swigCPtr, this, s);
  }

  public boolean changeQueuePosition(SWIGTYPE_p_std__string hash, QueueMove mv) {
    return RetroshareJNI.RsFiles_changeQueuePosition(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), mv.swigValue());
  }

  public boolean changeDownloadSpeed(SWIGTYPE_p_std__string hash, int speed) {
    return RetroshareJNI.RsFiles_changeDownloadSpeed(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), speed);
  }

  public boolean getDownloadSpeed(SWIGTYPE_p_std__string hash, SWIGTYPE_p_int speed) {
    return RetroshareJNI.RsFiles_getDownloadSpeed(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_int.getCPtr(speed));
  }

  public boolean clearDownload(SWIGTYPE_p_std__string hash) {
    return RetroshareJNI.RsFiles_clearDownload(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash));
  }

  public boolean FileDownloads(SWIGTYPE_p_std__listT_std__string_t hashs) {
    return RetroshareJNI.RsFiles_FileDownloads(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(hashs));
  }

  public boolean FileUploads(SWIGTYPE_p_std__listT_std__string_t hashs) {
    return RetroshareJNI.RsFiles_FileUploads(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(hashs));
  }

  public boolean FileDetails(SWIGTYPE_p_std__string hash, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t hintflags, FileInfo info) {
    return RetroshareJNI.RsFiles_FileDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(hintflags), FileInfo.getCPtr(info), info);
  }

  public boolean FileDownloadChunksDetails(SWIGTYPE_p_std__string hash, FileChunksInfo info) {
    return RetroshareJNI.RsFiles_FileDownloadChunksDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), FileChunksInfo.getCPtr(info), info);
  }

  public boolean FileUploadChunksDetails(SWIGTYPE_p_std__string hash, SWIGTYPE_p_std__string peer_id, CompressedChunkMap map) {
    return RetroshareJNI.RsFiles_FileUploadChunksDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_std__string.getCPtr(peer_id), CompressedChunkMap.getCPtr(map), map);
  }

  public boolean ExtraFileRemove(SWIGTYPE_p_std__string hash, SWIGTYPE_p_t_RsFlags32T_0x4228af_t flags) {
    return RetroshareJNI.RsFiles_ExtraFileRemove(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(hash), SWIGTYPE_p_t_RsFlags32T_0x4228af_t.getCPtr(flags));
  }

  public boolean ExtraFileHash(SWIGTYPE_p_std__string localpath, long period, SWIGTYPE_p_t_RsFlags32T_0x4228af_t flags) {
    return RetroshareJNI.RsFiles_ExtraFileHash(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(localpath), period, SWIGTYPE_p_t_RsFlags32T_0x4228af_t.getCPtr(flags));
  }

  public boolean ExtraFileStatus(SWIGTYPE_p_std__string localpath, FileInfo info) {
    return RetroshareJNI.RsFiles_ExtraFileStatus(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(localpath), FileInfo.getCPtr(info), info);
  }

  public boolean ExtraFileMove(SWIGTYPE_p_std__string fname, SWIGTYPE_p_std__string hash, java.math.BigInteger size, SWIGTYPE_p_std__string destpath) {
    return RetroshareJNI.RsFiles_ExtraFileMove(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(fname), SWIGTYPE_p_std__string.getCPtr(hash), size, SWIGTYPE_p_std__string.getCPtr(destpath));
  }

  public int RequestDirDetails(SWIGTYPE_p_std__string uid, SWIGTYPE_p_std__string path, DirDetails details) {
    return RetroshareJNI.RsFiles_RequestDirDetails__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(uid), SWIGTYPE_p_std__string.getCPtr(path), DirDetails.getCPtr(details), details);
  }

  public int RequestDirDetails(SWIGTYPE_p_void ref, DirDetails details, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags) {
    return RetroshareJNI.RsFiles_RequestDirDetails__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(ref), DirDetails.getCPtr(details), details, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags));
  }

  public long getType(SWIGTYPE_p_void ref, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags) {
    return RetroshareJNI.RsFiles_getType(swigCPtr, this, SWIGTYPE_p_void.getCPtr(ref), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags));
  }

  public int SearchKeywords(SWIGTYPE_p_std__listT_std__string_t keywords, SWIGTYPE_p_std__listT_DirDetails_t results, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags) {
    return RetroshareJNI.RsFiles_SearchKeywords__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(keywords), SWIGTYPE_p_std__listT_DirDetails_t.getCPtr(results), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags));
  }

  public int SearchKeywords(SWIGTYPE_p_std__listT_std__string_t keywords, SWIGTYPE_p_std__listT_DirDetails_t results, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags, SWIGTYPE_p_std__string peer_id) {
    return RetroshareJNI.RsFiles_SearchKeywords__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(keywords), SWIGTYPE_p_std__listT_DirDetails_t.getCPtr(results), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags), SWIGTYPE_p_std__string.getCPtr(peer_id));
  }

  public int SearchBoolExp(Expression exp, SWIGTYPE_p_std__listT_DirDetails_t results, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags) {
    return RetroshareJNI.RsFiles_SearchBoolExp__SWIG_0(swigCPtr, this, Expression.getCPtr(exp), exp, SWIGTYPE_p_std__listT_DirDetails_t.getCPtr(results), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags));
  }

  public int SearchBoolExp(Expression exp, SWIGTYPE_p_std__listT_DirDetails_t results, SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t flags, SWIGTYPE_p_std__string peer_id) {
    return RetroshareJNI.RsFiles_SearchBoolExp__SWIG_1(swigCPtr, this, Expression.getCPtr(exp), exp, SWIGTYPE_p_std__listT_DirDetails_t.getCPtr(results), SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t.getCPtr(flags), SWIGTYPE_p_std__string.getCPtr(peer_id));
  }

  public boolean ConvertSharedFilePath(SWIGTYPE_p_std__string path, SWIGTYPE_p_std__string fullpath) {
    return RetroshareJNI.RsFiles_ConvertSharedFilePath(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path), SWIGTYPE_p_std__string.getCPtr(fullpath));
  }

  public void ForceDirectoryCheck() {
    RetroshareJNI.RsFiles_ForceDirectoryCheck(swigCPtr, this);
  }

  public void updateSinceGroupPermissionsChanged() {
    RetroshareJNI.RsFiles_updateSinceGroupPermissionsChanged(swigCPtr, this);
  }

  public boolean InDirectoryCheck() {
    return RetroshareJNI.RsFiles_InDirectoryCheck(swigCPtr, this);
  }

  public boolean copyFile(SWIGTYPE_p_std__string source, SWIGTYPE_p_std__string dest) {
    return RetroshareJNI.RsFiles_copyFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(source), SWIGTYPE_p_std__string.getCPtr(dest));
  }

  public void setDownloadDirectory(SWIGTYPE_p_std__string path) {
    RetroshareJNI.RsFiles_setDownloadDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path));
  }

  public void setPartialsDirectory(SWIGTYPE_p_std__string path) {
    RetroshareJNI.RsFiles_setPartialsDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(path));
  }

  public SWIGTYPE_p_std__string getDownloadDirectory() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsFiles_getDownloadDirectory(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getPartialsDirectory() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsFiles_getPartialsDirectory(swigCPtr, this), true);
  }

  public boolean getSharedDirectories(SWIGTYPE_p_std__listT_SharedDirInfo_t dirs) {
    return RetroshareJNI.RsFiles_getSharedDirectories(swigCPtr, this, SWIGTYPE_p_std__listT_SharedDirInfo_t.getCPtr(dirs));
  }

  public boolean addSharedDirectory(SharedDirInfo dir) {
    return RetroshareJNI.RsFiles_addSharedDirectory(swigCPtr, this, SharedDirInfo.getCPtr(dir), dir);
  }

  public boolean updateShareFlags(SharedDirInfo dir) {
    return RetroshareJNI.RsFiles_updateShareFlags(swigCPtr, this, SharedDirInfo.getCPtr(dir), dir);
  }

  public boolean removeSharedDirectory(SWIGTYPE_p_std__string dir) {
    return RetroshareJNI.RsFiles_removeSharedDirectory(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(dir));
  }

  public void setRememberHashFilesDuration(long days) {
    RetroshareJNI.RsFiles_setRememberHashFilesDuration(swigCPtr, this, days);
  }

  public long rememberHashFilesDuration() {
    return RetroshareJNI.RsFiles_rememberHashFilesDuration(swigCPtr, this);
  }

  public void clearHashCache() {
    RetroshareJNI.RsFiles_clearHashCache(swigCPtr, this);
  }

  public boolean rememberHashFiles() {
    return RetroshareJNI.RsFiles_rememberHashFiles(swigCPtr, this);
  }

  public void setRememberHashFiles(boolean arg0) {
    RetroshareJNI.RsFiles_setRememberHashFiles(swigCPtr, this, arg0);
  }

  public void setWatchPeriod(int minutes) {
    RetroshareJNI.RsFiles_setWatchPeriod(swigCPtr, this, minutes);
  }

  public int watchPeriod() {
    return RetroshareJNI.RsFiles_watchPeriod(swigCPtr, this);
  }

  public CacheStrapper getCacheStrapper() {
    long cPtr = RetroshareJNI.RsFiles_getCacheStrapper(swigCPtr, this);
    return (cPtr == 0) ? null : new CacheStrapper(cPtr, false);
  }

  public CacheTransfer getCacheTransfer() {
    long cPtr = RetroshareJNI.RsFiles_getCacheTransfer(swigCPtr, this);
    return (cPtr == 0) ? null : new CacheTransfer(cPtr, false);
  }

  public boolean getShareDownloadDirectory() {
    return RetroshareJNI.RsFiles_getShareDownloadDirectory(swigCPtr, this);
  }

  public boolean shareDownloadDirectory(boolean share) {
    return RetroshareJNI.RsFiles_shareDownloadDirectory(swigCPtr, this, share);
  }

}
