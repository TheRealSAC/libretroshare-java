/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class RsPeers {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RsPeers(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RsPeers obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_RsPeers(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean FriendsChanged() {
    return RetroshareJNI.RsPeers_FriendsChanged(swigCPtr, this);
  }

  public boolean OthersChanged() {
    return RetroshareJNI.RsPeers_OthersChanged(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string getOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_getOwnId(swigCPtr, this), true);
  }

  public boolean haveSecretKey(SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.RsPeers_haveSecretKey(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean getOnlineList(SWIGTYPE_p_std__listT_std__string_t ssl_ids) {
    return RetroshareJNI.RsPeers_getOnlineList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ssl_ids));
  }

  public boolean getFriendList(SWIGTYPE_p_std__listT_std__string_t ssl_ids) {
    return RetroshareJNI.RsPeers_getFriendList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ssl_ids));
  }

  public boolean getPeerCount(SWIGTYPE_p_unsigned_int pnFriendCount, SWIGTYPE_p_unsigned_int pnnOnlineCount, boolean ssl) {
    return RetroshareJNI.RsPeers_getPeerCount(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(pnFriendCount), SWIGTYPE_p_unsigned_int.getCPtr(pnnOnlineCount), ssl);
  }

  public boolean isOnline(SWIGTYPE_p_std__string ssl_id) {
    return RetroshareJNI.RsPeers_isOnline(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id));
  }

  public boolean isFriend(SWIGTYPE_p_std__string ssl_id) {
    return RetroshareJNI.RsPeers_isFriend(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id));
  }

  public boolean isGPGAccepted(SWIGTYPE_p_std__string gpg_id_is_friend) {
    return RetroshareJNI.RsPeers_isGPGAccepted(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id_is_friend));
  }

  public SWIGTYPE_p_std__string getPeerName(SWIGTYPE_p_std__string ssl_or_gpg_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_getPeerName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpg_id)), true);
  }

  public SWIGTYPE_p_std__string getGPGName(SWIGTYPE_p_std__string gpg_id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_getGPGName(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id)), true);
  }

  public boolean getPeerDetails(SWIGTYPE_p_std__string ssl_or_gpg_id, RsPeerDetails d) {
    return RetroshareJNI.RsPeers_getPeerDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpg_id), RsPeerDetails.getCPtr(d), d);
  }

  public SWIGTYPE_p_std__string getGPGOwnId() {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_getGPGOwnId(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__string getGPGId(SWIGTYPE_p_std__string sslid_or_gpgid) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_getGPGId(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(sslid_or_gpgid)), true);
  }

  public boolean isKeySupported(SWIGTYPE_p_std__string gpg_ids) {
    return RetroshareJNI.RsPeers_isKeySupported(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_ids));
  }

  public boolean getGPGAcceptedList(SWIGTYPE_p_std__listT_std__string_t gpg_ids) {
    return RetroshareJNI.RsPeers_getGPGAcceptedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(gpg_ids));
  }

  public boolean getGPGSignedList(SWIGTYPE_p_std__listT_std__string_t gpg_ids) {
    return RetroshareJNI.RsPeers_getGPGSignedList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(gpg_ids));
  }

  public boolean getGPGValidList(SWIGTYPE_p_std__listT_std__string_t gpg_ids) {
    return RetroshareJNI.RsPeers_getGPGValidList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(gpg_ids));
  }

  public boolean getGPGAllList(SWIGTYPE_p_std__listT_std__string_t gpg_ids) {
    return RetroshareJNI.RsPeers_getGPGAllList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(gpg_ids));
  }

  public boolean getGPGDetails(SWIGTYPE_p_std__string gpg_id, RsPeerDetails d) {
    return RetroshareJNI.RsPeers_getGPGDetails(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), RsPeerDetails.getCPtr(d), d);
  }

  public boolean getAssociatedSSLIds(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__listT_std__string_t ids) {
    return RetroshareJNI.RsPeers_getAssociatedSSLIds(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__listT_std__string_t.getCPtr(ids));
  }

  public boolean gpgSignData(SWIGTYPE_p_void data, long len, SWIGTYPE_p_unsigned_char sign, SWIGTYPE_p_unsigned_int signlen) {
    return RetroshareJNI.RsPeers_gpgSignData(swigCPtr, this, SWIGTYPE_p_void.getCPtr(data), len, SWIGTYPE_p_unsigned_char.getCPtr(sign), SWIGTYPE_p_unsigned_int.getCPtr(signlen));
  }

  public boolean addFriend(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_t_RsFlags32T_0x380912_t flags) {
    return RetroshareJNI.RsPeers_addFriend__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_t_RsFlags32T_0x380912_t.getCPtr(flags));
  }

  public boolean addFriend(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.RsPeers_addFriend__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean removeFriend(SWIGTYPE_p_std__string ssl_or_gpg_id) {
    return RetroshareJNI.RsPeers_removeFriend(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_or_gpg_id));
  }

  public boolean removeFriendLocation(SWIGTYPE_p_std__string sslId) {
    return RetroshareJNI.RsPeers_removeFriendLocation(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(sslId));
  }

  public boolean removeKeysFromPGPKeyring(SWIGTYPE_p_std__listT_std__string_t pgp_ids, SWIGTYPE_p_std__string backup_file, SWIGTYPE_p_unsigned_int error_code) {
    return RetroshareJNI.RsPeers_removeKeysFromPGPKeyring(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(pgp_ids), SWIGTYPE_p_std__string.getCPtr(backup_file), SWIGTYPE_p_unsigned_int.getCPtr(error_code));
  }

  public boolean connectAttempt(SWIGTYPE_p_std__string ssl_id) {
    return RetroshareJNI.RsPeers_connectAttempt(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id));
  }

  public boolean setLocation(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string location) {
    return RetroshareJNI.RsPeers_setLocation(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(location));
  }

  public boolean setLocalAddress(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string addr, int port) {
    return RetroshareJNI.RsPeers_setLocalAddress(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(addr), port);
  }

  public boolean setExtAddress(SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string addr, int port) {
    return RetroshareJNI.RsPeers_setExtAddress(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(addr), port);
  }

  public boolean setDynDNS(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string addr) {
    return RetroshareJNI.RsPeers_setDynDNS(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(addr));
  }

  public boolean setNetworkMode(SWIGTYPE_p_std__string ssl_id, long netMode) {
    return RetroshareJNI.RsPeers_setNetworkMode(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), netMode);
  }

  public boolean setVisState(SWIGTYPE_p_std__string ssl_id, long vis) {
    return RetroshareJNI.RsPeers_setVisState(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), vis);
  }

  public void getIPServersList(SWIGTYPE_p_std__listT_std__string_t ip_servers) {
    RetroshareJNI.RsPeers_getIPServersList(swigCPtr, this, SWIGTYPE_p_std__listT_std__string_t.getCPtr(ip_servers));
  }

  public void allowServerIPDetermination(boolean arg0) {
    RetroshareJNI.RsPeers_allowServerIPDetermination(swigCPtr, this, arg0);
  }

  public void allowTunnelConnection(boolean arg0) {
    RetroshareJNI.RsPeers_allowTunnelConnection(swigCPtr, this, arg0);
  }

  public boolean getAllowServerIPDetermination() {
    return RetroshareJNI.RsPeers_getAllowServerIPDetermination(swigCPtr, this);
  }

  public boolean getAllowTunnelConnection() {
    return RetroshareJNI.RsPeers_getAllowTunnelConnection(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(SWIGTYPE_p_std__string ssl_id, boolean include_signatures, boolean old_format) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_GetRetroshareInvite__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), include_signatures, old_format), true);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(SWIGTYPE_p_std__string ssl_id, boolean include_signatures) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_GetRetroshareInvite__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id), include_signatures), true);
  }

  public boolean GetPGPBase64StringAndCheckSum(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_std__string gpg_base64_string, SWIGTYPE_p_std__string gpg_base64_checksum) {
    return RetroshareJNI.RsPeers_GetPGPBase64StringAndCheckSum(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_std__string.getCPtr(gpg_base64_string), SWIGTYPE_p_std__string.getCPtr(gpg_base64_checksum));
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(boolean include_signatures, boolean old_format) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_GetRetroshareInvite__SWIG_2(swigCPtr, this, include_signatures, old_format), true);
  }

  public SWIGTYPE_p_std__string GetRetroshareInvite(boolean include_signatures) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_GetRetroshareInvite__SWIG_3(swigCPtr, this, include_signatures), true);
  }

  public boolean hasExportMinimal() {
    return RetroshareJNI.RsPeers_hasExportMinimal(swigCPtr, this);
  }

  public boolean loadCertificateFromString(SWIGTYPE_p_std__string cert, SWIGTYPE_p_std__string ssl_id, SWIGTYPE_p_std__string pgp_id, SWIGTYPE_p_std__string error_string) {
    return RetroshareJNI.RsPeers_loadCertificateFromString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(cert), SWIGTYPE_p_std__string.getCPtr(ssl_id), SWIGTYPE_p_std__string.getCPtr(pgp_id), SWIGTYPE_p_std__string.getCPtr(error_string));
  }

  public boolean loadDetailsFromStringCert(SWIGTYPE_p_std__string certGPG, RsPeerDetails pd, SWIGTYPE_p_unsigned_int error_code) {
    return RetroshareJNI.RsPeers_loadDetailsFromStringCert(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(certGPG), RsPeerDetails.getCPtr(pd), pd, SWIGTYPE_p_unsigned_int.getCPtr(error_code));
  }

  public boolean cleanCertificate(SWIGTYPE_p_std__string certstr, SWIGTYPE_p_std__string cleanCert, SWIGTYPE_p_int error_code) {
    return RetroshareJNI.RsPeers_cleanCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(certstr), SWIGTYPE_p_std__string.getCPtr(cleanCert), SWIGTYPE_p_int.getCPtr(error_code));
  }

  public boolean saveCertificateToFile(SWIGTYPE_p_std__string id, SWIGTYPE_p_std__string fname) {
    return RetroshareJNI.RsPeers_saveCertificateToFile(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id), SWIGTYPE_p_std__string.getCPtr(fname));
  }

  public SWIGTYPE_p_std__string saveCertificateToString(SWIGTYPE_p_std__string id) {
    return new SWIGTYPE_p_std__string(RetroshareJNI.RsPeers_saveCertificateToString(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(id)), true);
  }

  public boolean signGPGCertificate(SWIGTYPE_p_std__string gpg_id) {
    return RetroshareJNI.RsPeers_signGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id));
  }

  public boolean trustGPGCertificate(SWIGTYPE_p_std__string gpg_id, long trustlvl) {
    return RetroshareJNI.RsPeers_trustGPGCertificate(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), trustlvl);
  }

  public boolean addGroup(RsGroupInfo groupInfo) {
    return RetroshareJNI.RsPeers_addGroup(swigCPtr, this, RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean editGroup(SWIGTYPE_p_std__string groupId, RsGroupInfo groupInfo) {
    return RetroshareJNI.RsPeers_editGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean removeGroup(SWIGTYPE_p_std__string groupId) {
    return RetroshareJNI.RsPeers_removeGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId));
  }

  public boolean getGroupInfo(SWIGTYPE_p_std__string groupId, RsGroupInfo groupInfo) {
    return RetroshareJNI.RsPeers_getGroupInfo(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), RsGroupInfo.getCPtr(groupInfo), groupInfo);
  }

  public boolean getGroupInfoList(SWIGTYPE_p_std__listT_RsGroupInfo_t groupInfoList) {
    return RetroshareJNI.RsPeers_getGroupInfoList(swigCPtr, this, SWIGTYPE_p_std__listT_RsGroupInfo_t.getCPtr(groupInfoList));
  }

  public boolean assignPeerToGroup(SWIGTYPE_p_std__string groupId, SWIGTYPE_p_std__string peerId, boolean assign) {
    return RetroshareJNI.RsPeers_assignPeerToGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), SWIGTYPE_p_std__string.getCPtr(peerId), assign);
  }

  public boolean assignPeersToGroup(SWIGTYPE_p_std__string groupId, SWIGTYPE_p_std__listT_std__string_t peerIds, boolean assign) {
    return RetroshareJNI.RsPeers_assignPeersToGroup(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(groupId), SWIGTYPE_p_std__listT_std__string_t.getCPtr(peerIds), assign);
  }

  public SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t computePeerPermissionFlags(SWIGTYPE_p_std__string peer_id, SWIGTYPE_p_t_RsFlags32T_0x184738_t file_sharing_flags, SWIGTYPE_p_std__listT_std__string_t file_parent_groups) {
    return new SWIGTYPE_p_t_RsFlags32T_0xf29ba5_t(RetroshareJNI.RsPeers_computePeerPermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(peer_id), SWIGTYPE_p_t_RsFlags32T_0x184738_t.getCPtr(file_sharing_flags), SWIGTYPE_p_std__listT_std__string_t.getCPtr(file_parent_groups)), true);
  }

  public SWIGTYPE_p_t_RsFlags32T_0x380912_t servicePermissionFlags(SWIGTYPE_p_std__string gpg_id) {
    return new SWIGTYPE_p_t_RsFlags32T_0x380912_t(RetroshareJNI.RsPeers_servicePermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id)), true);
  }

  public SWIGTYPE_p_t_RsFlags32T_0x380912_t servicePermissionFlags_sslid(SWIGTYPE_p_std__string ssl_id) {
    return new SWIGTYPE_p_t_RsFlags32T_0x380912_t(RetroshareJNI.RsPeers_servicePermissionFlags_sslid(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ssl_id)), true);
  }

  public void setServicePermissionFlags(SWIGTYPE_p_std__string gpg_id, SWIGTYPE_p_t_RsFlags32T_0x380912_t flags) {
    RetroshareJNI.RsPeers_setServicePermissionFlags(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(gpg_id), SWIGTYPE_p_t_RsFlags32T_0x380912_t.getCPtr(flags));
  }

}
