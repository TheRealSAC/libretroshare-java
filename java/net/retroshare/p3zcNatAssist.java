/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class p3zcNatAssist extends pqiNetAssistFirewall {
  private long swigCPtr;

  protected p3zcNatAssist(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.p3zcNatAssist_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(p3zcNatAssist obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_p3zcNatAssist(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public p3zcNatAssist() {
    this(RetroshareJNI.new_p3zcNatAssist(), true);
  }

  public int tick() {
    return RetroshareJNI.p3zcNatAssist_tick(swigCPtr, this);
  }

  public void enable(boolean on) {
    RetroshareJNI.p3zcNatAssist_enable(swigCPtr, this, on);
  }

  public void shutdown() {
    RetroshareJNI.p3zcNatAssist_shutdown(swigCPtr, this);
  }

  public void restart() {
    RetroshareJNI.p3zcNatAssist_restart(swigCPtr, this);
  }

  public boolean getEnabled() {
    return RetroshareJNI.p3zcNatAssist_getEnabled(swigCPtr, this);
  }

  public boolean getActive() {
    return RetroshareJNI.p3zcNatAssist_getActive(swigCPtr, this);
  }

  public void setInternalPort(int iport_in) {
    RetroshareJNI.p3zcNatAssist_setInternalPort(swigCPtr, this, iport_in);
  }

  public void setExternalPort(int eport_in) {
    RetroshareJNI.p3zcNatAssist_setExternalPort(swigCPtr, this, eport_in);
  }

  public boolean getInternalAddress(SWIGTYPE_p_sockaddr_in addr) {
    return RetroshareJNI.p3zcNatAssist_getInternalAddress(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public boolean getExternalAddress(SWIGTYPE_p_sockaddr_in addr) {
    return RetroshareJNI.p3zcNatAssist_getExternalAddress(swigCPtr, this, SWIGTYPE_p_sockaddr_in.getCPtr(addr));
  }

  public boolean requestPortForward(PortForwardParams params) {
    return RetroshareJNI.p3zcNatAssist_requestPortForward(swigCPtr, this, PortForwardParams.getCPtr(params), params);
  }

  public boolean statusPortForward(long fwdId, PortForwardParams params) {
    return RetroshareJNI.p3zcNatAssist_statusPortForward(swigCPtr, this, fwdId, PortForwardParams.getCPtr(params), params);
  }

  public void callbackMapping(SWIGTYPE_p_DNSServiceRef sdRef, SWIGTYPE_p_DNSServiceFlags flags, long interfaceIndex, SWIGTYPE_p_DNSServiceErrorType errorCode, long externalAddress, SWIGTYPE_p_DNSServiceProtocol protocol, int internalPort, int externalPort, long ttl) {
    RetroshareJNI.p3zcNatAssist_callbackMapping(swigCPtr, this, SWIGTYPE_p_DNSServiceRef.getCPtr(sdRef), SWIGTYPE_p_DNSServiceFlags.getCPtr(flags), interfaceIndex, SWIGTYPE_p_DNSServiceErrorType.getCPtr(errorCode), externalAddress, SWIGTYPE_p_DNSServiceProtocol.getCPtr(protocol), internalPort, externalPort, ttl);
  }

}
