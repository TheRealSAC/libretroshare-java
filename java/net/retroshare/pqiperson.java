/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.retroshare;

public class pqiperson extends PQInterface {
  private long swigCPtr;

  protected pqiperson(long cPtr, boolean cMemoryOwn) {
    super(RetroshareJNI.pqiperson_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(pqiperson obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RetroshareJNI.delete_pqiperson(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public pqiperson(SWIGTYPE_p_std__string id, pqipersongrp ppg) {
    this(RetroshareJNI.new_pqiperson(SWIGTYPE_p_std__string.getCPtr(id), pqipersongrp.getCPtr(ppg), ppg), true);
  }

  public int reset() {
    return RetroshareJNI.pqiperson_reset(swigCPtr, this);
  }

  public int listen() {
    return RetroshareJNI.pqiperson_listen(swigCPtr, this);
  }

  public int stoplistening() {
    return RetroshareJNI.pqiperson_stoplistening(swigCPtr, this);
  }

  public int connect(long type, SWIGTYPE_p_sockaddr_in raddr, SWIGTYPE_p_sockaddr_in proxyaddr, SWIGTYPE_p_sockaddr_in srcaddr, long delay, long period, long timeout, long flags, long bandwidth) {
    return RetroshareJNI.pqiperson_connect(swigCPtr, this, type, SWIGTYPE_p_sockaddr_in.getCPtr(raddr), SWIGTYPE_p_sockaddr_in.getCPtr(proxyaddr), SWIGTYPE_p_sockaddr_in.getCPtr(srcaddr), delay, period, timeout, flags, bandwidth);
  }

  public int receiveHeartbeat() {
    return RetroshareJNI.pqiperson_receiveHeartbeat(swigCPtr, this);
  }

  public int addChildInterface(long type, pqiconnect pqi) {
    return RetroshareJNI.pqiperson_addChildInterface(swigCPtr, this, type, pqiconnect.getCPtr(pqi), pqi);
  }

  public boolean getCryptoParams(RsPeerCryptoParams arg0) {
    return RetroshareJNI.pqiperson_getCryptoParams(swigCPtr, this, RsPeerCryptoParams.getCPtr(arg0), arg0);
  }

  public int SendItem(RsItem arg0, SWIGTYPE_p_unsigned_int serialized_size) {
    return RetroshareJNI.pqiperson_SendItem__SWIG_0(swigCPtr, this, RsItem.getCPtr(arg0), arg0, SWIGTYPE_p_unsigned_int.getCPtr(serialized_size));
  }

  public int SendItem(RsItem item) {
    return RetroshareJNI.pqiperson_SendItem__SWIG_1(swigCPtr, this, RsItem.getCPtr(item), item);
  }

  public RsItem GetItem() {
    long cPtr = RetroshareJNI.pqiperson_GetItem(swigCPtr, this);
    return (cPtr == 0) ? null : new RsItem(cPtr, false);
  }

  public int status() {
    return RetroshareJNI.pqiperson_status(swigCPtr, this);
  }

  public int tick() {
    return RetroshareJNI.pqiperson_tick(swigCPtr, this);
  }

  public int notifyEvent(NetInterface ni, int event) {
    return RetroshareJNI.pqiperson_notifyEvent(swigCPtr, this, NetInterface.getCPtr(ni), ni, event);
  }

  public int getQueueSize(boolean in) {
    return RetroshareJNI.pqiperson_getQueueSize(swigCPtr, this, in);
  }

  public void getRates(RsBwRates rates) {
    RetroshareJNI.pqiperson_getRates(swigCPtr, this, RsBwRates.getCPtr(rates), rates);
  }

  public float getRate(boolean in) {
    return RetroshareJNI.pqiperson_getRate(swigCPtr, this, in);
  }

  public void setMaxRate(boolean in, float val) {
    RetroshareJNI.pqiperson_setMaxRate(swigCPtr, this, in, val);
  }

  public void setRateCap(float val_in, float val_out) {
    RetroshareJNI.pqiperson_setRateCap(swigCPtr, this, val_in, val_out);
  }

  public pqiconnect getKid(long type) {
    long cPtr = RetroshareJNI.pqiperson_getKid(swigCPtr, this, type);
    return (cPtr == 0) ? null : new pqiconnect(cPtr, false);
  }

}
